{"version":3,"sources":["Chart.js","App.js","index.js"],"names":["Lchart","props","data","className","isShown","LineChart","width","height","CartesianGrid","horizontal","vertical","XAxis","dataKey","padding","right","left","YAxis","type","domain","bottom","top","minTickGap","allowDecimals","Label","value","angle","position","offset","Legend","verticalAlign","Line","name","stroke","strokeWidth","dot","App","useState","Manufacturing","setManufacturing","Inspection","setInspection","Packaging","setPackaging","Production","setProduction","Freights","setFreights","Landingcost","setLandingcost","Insert","setInsert","PPC","setPPC","Listing","setListing","Revenue","setRevenue","RefFee","setRefFee","FBAFee","setFBAFee","TotalOutPerUnit","setTotalOutPerUnit","OneOrderTimeSAAS","setOneOrderTimeSAAS","TotalSAAS","setTotalSAAS","LLC","setLLC","Trademark","setTrademark","Photographing","setPhotographing","Unboxing","setUnboxing","InsertDesign","setInsertDesign","PackagingDesign","setPackagingDesign","Samples","setSamples","TotalOneTime","setTotalOneTime","UnitsInOrder","setUnitsInOrder","TotalOutPerOrder","setTotalOutPerOrder","TotalInPerOrder","setTotalInPerOrder","MarginPerUnit","setMarginPerUnit","Orders","setOrders","TotalIn","setTotalIn","TotalOut","setTotalOut","TotalProfit","setTotalProfit","TotalMargin","setTotalMargin","i","push","orderNo","profitMargin","Math","round","Asimptot","l50","l30","l15","l0","style","textAlign","marginLeft","marginRight","color","fontWeight","onChange","e","target","min","max","step","disabled","margin","backgroundColor","paddingTop","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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+B,IACGvB,KACEoB,KACG9C,IACCE,IACAE,IACAI,IACA0E,EAAEC,OAAOhG,QACT2B,IACAM,IACAE,IAETqC,IACGL,KACG5B,KACCoB,KACG9C,IACCE,IACAE,IACAI,IACA0E,EAAEC,OAAOhG,QACT2B,IACAM,IACAE,KAEXuC,GACEL,IACGF,KACG5B,KACCoB,KACG9C,IACCE,IACAE,IACAI,IACA0E,EAAEC,OAAOhG,QACT2B,IACAM,IACAE,KAEbyC,IACIP,IACCF,KACG5B,KACCoB,KACG9C,IACCE,IACAE,IACAI,IACA0E,EAAEC,OAAOhG,QACT2B,IACAM,IACAE,MACRkC,GACD,MAGN5E,KAAK,SACLwG,IAAI,OACJC,IAAI,eACJC,KAAK,WAGT,oBACEX,MAAO,CAAE1G,MAAO,OAAQ8G,MAAO,OAAQC,WAAY,UADrD,SAGG,WAIP,6BACE,sBAAKL,MAAO,CAAEC,UAAW,UAAzB,UACE,qBACED,MAAO,CAAE1G,MAAO,QAAS8G,MAAO,OAAQC,WAAY,UADtD,iBAGO,OAEP,oBAAIL,MAAO,CAAEI,MAAO,OAAQC,WAAY,UAAxC,SACE,uBACEL,MAAO,CAAE1G,MAAO,OAAQ2G,UAAW,UACnCzF,MAAO2B,EACPmE,SAAU,SAACC,GACTnE,EAAOqD,KAAKC,MAAwB,KAAjBa,EAAEC,OAAOhG,OAAe,KAC3C8B,GACGjB,IACEE,IACAE,IACAI,IACAI,IACAsE,EAAEC,OAAOhG,OAEdsC,IACGzB,IACEE,IACAE,IACAI,IACAI,IACAsE,EAAEC,OAAOhG,QACTiC,IACAE,GAEL+B,KACKP,IAAgB5B,GAChB4B,KACG9C,IACCE,IACAE,IACAI,IACAI,IACAsE,EAAEC,OAAOhG,QACTiC,IACAE,MACHwB,IAAgB5B,GAClB,KAEJ+B,IACGvB,KACEoB,KACG9C,IACCE,IACAE,IACAI,IACAI,IACAE,IACAM,IACAE,IAETqC,IACGL,KACG5B,KACCoB,KACG9C,IACCE,IACAE,IACAI,IACAI,IACAsE,EAAEC,OAAOhG,QACTiC,IACAE,KAEXuC,GACEL,IACGF,KACG5B,KACCoB,K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","file":"static/js/main.8fd281be.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  LineChart,\r\n  CartesianGrid,\r\n  XAxis,\r\n  YAxis,\r\n  Legend,\r\n  Line,\r\n  Label,\r\n} from \"recharts\";\r\n\r\nexport default function Lchart(props) {\r\n  let data = props.data;\r\n\r\n  return (\r\n    <div className={\"chartdiv\" + (props.isShown ? \"show\" : \"\")}>\r\n      <span className=\"chart\">\r\n        <LineChart width={720} height={250} data={data}>\r\n          <CartesianGrid horizontal={true} vertical={true} />\r\n          <XAxis dataKey=\"orderNo\" padding={{ right: 20, left: 20 }} />\r\n          <YAxis\r\n            type=\"number\"\r\n            domain={[0, 100]}\r\n            padding={{ bottom: 15, top: 20 }}\r\n            height={50}\r\n            minTickGap={1}\r\n            allowDecimals={false}\r\n          >\r\n            <Label value=\"%\" angle={-90} position=\"insideBottom\" offset={80} />\r\n          </YAxis>\r\n          <Legend verticalAlign=\"bottom\" height={26} />\r\n          <Line\r\n            name=\"שולי רווח\"\r\n            type=\"linear\"\r\n            dataKey=\"profitMargin\"\r\n            stroke=\"#000000\"\r\n          />\r\n          <Line\r\n            name=\"שולי רווח אססימפטוטיים\"\r\n            type=\"linear\"\r\n            dataKey=\"Asimptot\"\r\n            stroke=\"#0000ff\"\r\n          />\r\n          <Line\r\n            strokeWidth={2}\r\n            name=\"קו 50\"\r\n            type=\"linear\"\r\n            dataKey=\"l50\"\r\n            stroke=\"#00ff00\"\r\n            dot={{ stroke: \"black\", strokeWidth: 2 }}\r\n          />\r\n          <Line\r\n            strokeWidth={2}\r\n            name=\"קו 30\"\r\n            type=\"linear\"\r\n            dataKey=\"l30\"\r\n            stroke=\"#fbff00\"\r\n            dot={{ stroke: \"black\", strokeWidth: 2 }}\r\n          />\r\n          <Line\r\n            strokeWidth={2}\r\n            name=\"קו 15\"\r\n            type=\"linear\"\r\n            dataKey=\"l15\"\r\n            stroke=\"#ffae00\"\r\n            dot={{ stroke: \"black\", strokeWidth: 2 }}\r\n          />\r\n          <Line\r\n            strokeWidth={2}\r\n            name=\"קו הפסד\"\r\n            type=\"linear\"\r\n            dataKey=\"l0\"\r\n            stroke=\"#ff0000\"\r\n            dot={{ stroke: \"black\", strokeWidth: 2 }}\r\n          />\r\n        </LineChart>\r\n      </span>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport Chart from \"./Chart\";\r\n\r\nfunction App() {\r\n  const [Manufacturing, setManufacturing] = useState();\r\n  const [Inspection, setInspection] = useState();\r\n  const [Packaging, setPackaging] = useState();\r\n  const [Production, setProduction] = useState();\r\n  const [Freights, setFreights] = useState();\r\n  const [Landingcost, setLandingcost] = useState();\r\n  const [Insert, setInsert] = useState();\r\n  const [PPC, setPPC] = useState();\r\n  const [Listing, setListing] = useState();\r\n  const [Revenue, setRevenue] = useState();\r\n  const [RefFee, setRefFee] = useState();\r\n  const [FBAFee, setFBAFee] = useState();\r\n  const [TotalOutPerUnit, setTotalOutPerUnit] = useState();\r\n  const [OneOrderTimeSAAS, setOneOrderTimeSAAS] = useState();\r\n  const [TotalSAAS, setTotalSAAS] = useState();\r\n  const [LLC, setLLC] = useState();\r\n  const [Trademark, setTrademark] = useState();\r\n  const [Photographing, setPhotographing] = useState();\r\n  const [Unboxing, setUnboxing] = useState();\r\n  const [InsertDesign, setInsertDesign] = useState();\r\n  const [PackagingDesign, setPackagingDesign] = useState();\r\n  const [Samples, setSamples] = useState();\r\n  const [TotalOneTime, setTotalOneTime] = useState();\r\n  const [UnitsInOrder, setUnitsInOrder] = useState();\r\n  const [TotalOutPerOrder, setTotalOutPerOrder] = useState();\r\n  const [TotalInPerOrder, setTotalInPerOrder] = useState();\r\n  const [MarginPerUnit, setMarginPerUnit] = useState();\r\n  const [Orders, setOrders] = useState();\r\n  const [TotalIn, setTotalIn] = useState();\r\n  const [TotalOut, setTotalOut] = useState();\r\n  const [TotalProfit, setTotalProfit] = useState();\r\n  const [TotalMargin, setTotalMargin] = useState();\r\n\r\n  let data = [];\r\n  for (let i = 1; i < 10; i++) {\r\n    data.push({\r\n      orderNo: i,\r\n      profitMargin: Math.round(\r\n        ((+TotalInPerOrder * +i - (+TotalOutPerOrder * +i + +TotalOneTime)) /\r\n          (+TotalInPerOrder * +i)) *\r\n          100\r\n      ),\r\n      Asimptot: MarginPerUnit,\r\n      l50: 50,\r\n      l30: 30,\r\n      l15: 15,\r\n      l0: 0,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h1 style={{ textAlign: \"center\" }}>PF PC(Profitability Calclator)</h1>\r\n      <table style={{ marginLeft: \"auto\", marginRight: \"auto\" }}>\r\n        <tbody style={{ textAlign: \"center\" }}>\r\n          <tr>\r\n            <div>\r\n              <td\r\n                style={{ width: \"154px\", color: \"blue\", fontWeight: \"bolder\" }}\r\n              >\r\n                Manufacturing:\r\n              </td>\r\n              <td style={{ color: \"blue\", fontWeight: \"bolder\" }}>\r\n                <input\r\n                  style={{ width: \"80px\", textAlign: \"center\" }}\r\n                  value={Manufacturing}\r\n                  onChange={(e) => {\r\n                    setManufacturing(Math.round(+e.target.value * 100) / 100);\r\n                    setProduction(+e.target.value + +Inspection + +Packaging);\r\n                    setLandingcost(\r\n                      +e.target.value + +Inspection + +Packaging + +Freights\r\n                    );\r\n                    setListing(\r\n                      +e.target.value +\r\n                        +Inspection +\r\n                        +Packaging +\r\n                        +Freights +\r\n                        +Insert +\r\n                        +PPC\r\n                    );\r\n                    setTotalOutPerUnit(\r\n                      +e.target.value +\r\n                        +Inspection +\r\n                        +Packaging +\r\n                        +Freights +\r\n                        +Insert +\r\n                        +PPC +\r\n                        +RefFee +\r\n                        +FBAFee\r\n                    );\r\n                    setMarginPerUnit(\r\n                      ((+UnitsInOrder * +Revenue -\r\n                        +UnitsInOrder *\r\n                          (+e.target.value +\r\n                            +Inspection +\r\n                            +Packaging +\r\n                            +Freights +\r\n                            +Insert +\r\n                            +PPC +\r\n                            +RefFee +\r\n                            +FBAFee)) /\r\n                        (+UnitsInOrder * +Revenue)) *\r\n                        100\r\n                    );\r\n                    setTotalOutPerOrder(\r\n                      +OneOrderTimeSAAS +\r\n                        +UnitsInOrder *\r\n                          (+e.target.value +\r\n                            +Inspection +\r\n                            +Packaging +\r\n                            +Freights +\r\n                            +Insert +\r\n                            +PPC +\r\n                            +RefFee +\r\n                            +FBAFee)\r\n                    );\r\n                    setTotalOut(\r\n                      +Orders *\r\n                        (+OneOrderTimeSAAS +\r\n                          +UnitsInOrder *\r\n                            (+e.target.value +\r\n                              +Inspection +\r\n                              +Packaging +\r\n                              +Freights +\r\n                              +Insert +\r\n                              +PPC +\r\n                              +RefFee +\r\n                              +FBAFee))\r\n                    );\r\n                    setTotalProfit(\r\n                      +TotalIn -\r\n                        +Orders *\r\n                          (+OneOrderTimeSAAS +\r\n                            +UnitsInOrder *\r\n                              (+e.target.value +\r\n                                +Inspection +\r\n                                +Packaging +\r\n                                +Freights +\r\n                                +Insert +\r\n                                +PPC +\r\n                                +RefFee +\r\n                                +FBAFee))\r\n                    );\r\n                    setTotalMargin(\r\n                      ((+TotalIn -\r\n                        +Orders *\r\n                          (+OneOrderTimeSAAS +\r\n                            +UnitsInOrder *\r\n                              (+e.target.value +\r\n                                +Inspection +\r\n                                +Packaging +\r\n                                +Freights +\r\n                                +Insert +\r\n                                +PPC +\r\n                                +RefFee +\r\n                                +FBAFee))) /\r\n                        +TotalIn) *\r\n                        100\r\n                    );\r\n                  }}\r\n                  type=\"number\"\r\n                  min=\"0.00\"\r\n                  max=\"100000000.00\"\r\n                  step=\"0.01\"\r\n                />\r\n              </td>\r\n              <td\r\n                style={{ width: \"30px\", color: \"blue\", fontWeight: \"bolder\" }}\r\n              >\r\n                {\"$\"}\r\n              </td>\r\n            </div>\r\n          </tr>\r\n          <tr>\r\n            <div style={{ textAlign: \"center\" }}>\r\n              <td\r\n                style={{ width: \"154px\", color: \"blue\", fontWeight: \"bolder\" }}\r\n              >\r\n                Inspection:\r\n              </td>\r\n              <td style={{ color: \"blue\", fontWeight: \"bolder\" }}>\r\n                <input\r\n                  style={{ width: \"80px\", textAlign: \"center\" }}\r\n                  value={Inspection}\r\n                  onChange={(e) => {\r\n                    setInspection(Math.round(+e.target.value * 100) / 100);\r\n                    setProduction(\r\n                      +Manufacturing + +e.target.value + +Packaging\r\n                    );\r\n                    setLandingcost(\r\n                      +Manufacturing + +e.target.value + +Packaging + +Freights\r\n                    );\r\n                    setListing(\r\n                      +Manufacturing +\r\n                        +e.target.value +\r\n                        +Packaging +\r\n                        +Freights +\r\n                        +Insert +\r\n                        +PPC\r\n                    );\r\n                    setTotalOutPerUnit(\r\n                      +Manufacturing +\r\n                        +e.target.value +\r\n                        +Packaging +\r\n                        +Freights +\r\n                        +Insert +\r\n                        +PPC +\r\n                        +RefFee +\r\n                        +FBAFee\r\n                    );\r\n                    setMarginPerUnit(\r\n                      ((+UnitsInOrder * +Revenue -\r\n                        +UnitsInOrder *\r\n                          (+Manufacturing +\r\n                            +e.target.value +\r\n                            +Packaging +\r\n                            +Freights +\r\n                            +Insert +\r\n                            +PPC +\r\n                            +RefFee +\r\n                            +FBAFee)) /\r\n                        (+UnitsInOrder * +Revenue)) *\r\n                        100\r\n                    );\r\n                    setTotalOutPerOrder(\r\n                      +OneOrderTimeSAAS +\r\n                        +UnitsInOrder *\r\n                          (+Manufacturing +\r\n                            +e.target.value +\r\n                            +Packaging +\r\n                            +Freights +\r\n                            +Insert +\r\n                            +PPC +\r\n                            +RefFee +\r\n                            +FBAFee)\r\n                    );\r\n                    setTotalOut(\r\n                      +Orders *\r\n                        (+OneOrderTimeSAAS +\r\n                          +UnitsInOrder *\r\n                            (+Manufacturing +\r\n                              +e.target.value +\r\n                              +Packaging +\r\n                              +Freights +\r\n                              +Insert +\r\n                              +PPC +\r\n                              +RefFee +\r\n                              +FBAFee))\r\n                    );\r\n                    setTotalProfit(\r\n                      TotalIn -\r\n                        +Orders *\r\n                          (+OneOrderTimeSAAS +\r\n                            +UnitsInOrder *\r\n                              (+Manufacturing +\r\n                                +e.target.value +\r\n                                +Packaging +\r\n                                +Freights +\r\n                                +Insert +\r\n                                +PPC +\r\n                                +RefFee +\r\n                                +FBAFee))\r\n                    );\r\n                    setTotalMargin(\r\n                      ((TotalIn -\r\n                        +Orders *\r\n                          (+OneOrderTimeSAAS +\r\n                            +UnitsInOrder *\r\n                              (+Manufacturing +\r\n                                +e.target.value +\r\n                                +Packaging +\r\n                                +Freights +\r\n                                +Insert +\r\n                                +PPC +\r\n                                +RefFee +\r\n                                +FBAFee))) /\r\n                        +TotalIn) *\r\n                        100\r\n                    );\r\n                  }}\r\n                  type=\"number\"\r\n                  min=\"0.00\"\r\n                  max=\"100000000.00\"\r\n                  step=\"0.01\"\r\n                />\r\n              </td>\r\n              <td\r\n                style={{ width: \"30px\", color: \"blue\", fontWeight: \"bolder\" }}\r\n              >\r\n                {\"$\"}\r\n              </td>\r\n            </div>\r\n          </tr>\r\n          <tr>\r\n            <div style={{ textAlign: \"center\" }}>\r\n              <td\r\n                style={{ width: \"154px\", color: \"blue\", fontWeight: \"bolder\" }}\r\n              >\r\n                Packaging:\r\n              </td>\r\n              <td style={{ color: \"blue\", fontWeight: \"bolder\" }}>\r\n                <input\r\n                  style={{ width: \"80px\", textAlign: \"center\" }}\r\n                  value={Packaging}\r\n                  onChange={(e) => {\r\n                    setPackaging(Math.round(+e.target.value * 100) / 100);\r\n                    setProduction(\r\n                      +Manufacturing + +Inspection + +e.target.value\r\n                    );\r\n                    setLandingcost(\r\n                      +Manufacturing + +Inspection + +e.target.value + +Freights\r\n                    );\r\n                    setListing(\r\n                      +Manufacturing +\r\n                        +Inspection +\r\n                        +e.target.value +\r\n                        +Freights +\r\n                        +Insert +\r\n                        +PPC\r\n                    );\r\n                    setTotalOutPerUnit(\r\n                      +Manufacturing +\r\n                        +Inspection +\r\n                        +e.target.value +\r\n                        +Freights +\r\n                        +Insert +\r\n                        +PPC +\r\n                        +RefFee +\r\n                        +FBAFee\r\n                    );\r\n                    setMarginPerUnit(\r\n                      ((+UnitsInOrder * +Revenue -\r\n                        +UnitsInOrder *\r\n                          (+Manufacturing +\r\n                            +Inspection +\r\n                            +e.target.value +\r\n                            +Freights +\r\n                            +Insert +\r\n                            +PPC +\r\n                            +RefFee +\r\n                            +FBAFee)) /\r\n                        (+UnitsInOrder * +Revenue)) *\r\n                        100\r\n                    );\r\n                    setTotalOutPerOrder(\r\n                      +OneOrderTimeSAAS +\r\n                        +UnitsInOrder *\r\n                          (+Manufacturing +\r\n                            +Inspection +\r\n                            +e.target.value +\r\n                            +Freights +\r\n                            +Insert +\r\n                            +PPC +\r\n                            +RefFee +\r\n                            +FBAFee)\r\n                    );\r\n                    setTotalOut(\r\n                      +Orders *\r\n                        (+OneOrderTimeSAAS +\r\n                          +UnitsInOrder *\r\n                            (+Manufacturing +\r\n                              +Inspection +\r\n                              +e.target.value +\r\n                              +Freights +\r\n                              +Insert +\r\n                              +PPC +\r\n                              +RefFee +\r\n                              +FBAFee))\r\n                    );\r\n                    setTotalProfit(\r\n                      TotalIn -\r\n                        +Orders *\r\n                          (+OneOrderTimeSAAS +\r\n                            +UnitsInOrder *\r\n                              (+Manufacturing +\r\n                                +Inspection +\r\n                                +e.target.value +\r\n                                +Freights +\r\n                                +Insert +\r\n                                +PPC +\r\n                                +RefFee +\r\n                                +FBAFee))\r\n                    );\r\n                    setTotalMargin(\r\n                      ((TotalIn -\r\n                        +Orders *\r\n                          (+OneOrderTimeSAAS +\r\n                            +UnitsInOrder *\r\n                              (+Manufacturing +\r\n                                +Inspection +\r\n                                +e.target.value +\r\n                                +Freights +\r\n                                +Insert +\r\n                                +PPC +\r\n                                +RefFee +\r\n                                +FBAFee))) /\r\n                        +TotalIn) *\r\n                        100\r\n                    );\r\n                  }}\r\n                  type=\"number\"\r\n                  min=\"0.00\"\r\n                  max=\"100000000.00\"\r\n                  step=\"0.01\"\r\n                />\r\n              </td>\r\n              <td\r\n                style={{ width: \"30px\", color: \"blue\", fontWeight: \"bolder\" }}\r\n              >\r\n                {\"$\"}\r\n              </td>\r\n            </div>\r\n          </tr>\r\n          <tr>\r\n            <div style={{ textAlign: \"center\" }}>\r\n              <td\r\n                style={{ width: \"154px\", color: \"blue\", fontWeight: \"bolder\" }}\r\n              >\r\n                Production:\r\n              </td>\r\n              <td style={{ color: \"blue\", fontWeight: \"bolder\" }}>\r\n                <input\r\n                  style={{ width: \"80px\", textAlign: \"center\" }}\r\n                  value={Math.round(Production * 100) / 100}\r\n                  type=\"number\"\r\n                  min=\"0.00\"\r\n                  max=\"100000000.00\"\r\n                  step=\"0.01\"\r\n                  disabled\r\n                />\r\n              </td>\r\n              <td\r\n                style={{ width: \"30px\", color: \"blue\", fontWeight: \"bolder\" }}\r\n              >\r\n                {\"$\"}\r\n              </td>\r\n            </div>\r\n          </tr>\r\n          <tr>\r\n            <div style={{ textAlign: \"center\" }}>\r\n              <td\r\n                style={{ width: \"154px\", color: \"blue\", fontWeight: \"bolder\" }}\r\n              >\r\n                Freights:{\" \"}\r\n              </td>\r\n              <td style={{ color: \"blue\", fontWeight: \"bolder\" }}>\r\n                <input\r\n                  style={{ width: \"80px\", textAlign: \"center\" }}\r\n                  value={Freights}\r\n                  onChange={(e) => {\r\n                    setFreights(Math.round(+e.target.value * 100) / 100);\r\n                    setLandingcost(+Production + +e.target.value);\r\n                    setListing(\r\n                      +Manufacturing +\r\n                        +Inspection +\r\n                        +Packaging +\r\n                        +e.target.value +\r\n                        +Insert +\r\n                        +PPC\r\n                    );\r\n                    setTotalOutPerUnit(\r\n                      +Manufacturing +\r\n                        +Inspection +\r\n                        +Packaging +\r\n                        +e.target.value +\r\n                        +Insert +\r\n                        +PPC +\r\n                        +RefFee +\r\n                        +FBAFee\r\n                    );\r\n                    setMarginPerUnit(\r\n                      ((+UnitsInOrder * +Revenue -\r\n                        +UnitsInOrder *\r\n                          (+Manufacturing +\r\n                            +Inspection +\r\n                            +Packaging +\r\n                            +e.target.value +\r\n                            +Insert +\r\n                            +PPC +\r\n                            +RefFee +\r\n                            +FBAFee)) /\r\n                        (+UnitsInOrder * +Revenue)) *\r\n                        100\r\n                    );\r\n                    setTotalOutPerOrder(\r\n                      +OneOrderTimeSAAS +\r\n                        +UnitsInOrder *\r\n                          (+Manufacturing +\r\n                            +Inspection +\r\n                            +Packaging +\r\n                            +e.target.value +\r\n                            +Insert +\r\n                            +PPC +\r\n                            +RefFee +\r\n                            +FBAFee)\r\n                    );\r\n                    setTotalOut(\r\n                      +Orders *\r\n                        (+OneOrderTimeSAAS +\r\n                          +UnitsInOrder *\r\n                            (+Manufacturing +\r\n                              +Inspection +\r\n                              +Packaging +\r\n                              +e.target.value +\r\n                              +Insert +\r\n                              +PPC +\r\n                              +RefFee +\r\n                              +FBAFee))\r\n                    );\r\n                    setTotalProfit(\r\n                      TotalIn -\r\n                        +Orders *\r\n                          (+OneOrderTimeSAAS +\r\n                            +UnitsInOrder *\r\n                              (+Manufacturing +\r\n                                +Inspection +\r\n                                +Packaging +\r\n                                +e.target.value +\r\n                                +Insert +\r\n                                +PPC +\r\n                                +RefFee +\r\n                                +FBAFee))\r\n                    );\r\n                    setTotalMargin(\r\n                      ((TotalIn -\r\n                        +Orders *\r\n                          (+OneOrderTimeSAAS +\r\n                            +UnitsInOrder *\r\n                              (+Manufacturing +\r\n                                +Inspection +\r\n                                +Packaging +\r\n                                +e.target.value +\r\n                                +Insert +\r\n                                +PPC +\r\n                                +RefFee +\r\n                                +FBAFee))) /\r\n                        +TotalIn) *\r\n                        100\r\n                    );\r\n                  }}\r\n                  type=\"number\"\r\n                  min=\"0.00\"\r\n                  max=\"100000000.00\"\r\n                  step=\"0.01\"\r\n                />\r\n              </td>\r\n              <td\r\n                style={{ width: \"30px\", color: \"blue\", fontWeight: \"bolder\" }}\r\n              >\r\n                {\"$\"}\r\n              </td>\r\n            </div>\r\n          </tr>\r\n          <tr>\r\n            <div style={{ textAlign: \"center\" }}>\r\n              <td\r\n                style={{ width: \"154px\", color: \"blue\", fontWeight: \"bolder\" }}\r\n              >\r\n                Landingcost:\r\n              </td>\r\n              <td style={{ color: \"blue\", fontWeight: \"bolder\" }}>\r\n                <input\r\n                  style={{ width: \"80px\", textAlign: \"center\" }}\r\n                  value={Math.round(Landingcost * 100) / 100}\r\n                  type=\"number\"\r\n                  min=\"0.00\"\r\n                  max=\"100000000.00\"\r\n                  step=\"0.01\"\r\n                  disabled\r\n                />\r\n              </td>\r\n              <td\r\n                style={{ width: \"30px\", color: \"blue\", fontWeight: \"bolder\" }}\r\n              >\r\n                {\"$\"}\r\n              </td>\r\n            </div>\r\n          </tr>\r\n          <tr>\r\n            <div style={{ textAlign: \"center\" }}>\r\n              <td\r\n                style={{ width: \"154px\", color: \"blue\", fontWeight: \"bolder\" }}\r\n              >\r\n                Insert:{\" \"}\r\n              </td>\r\n              <td style={{ color: \"blue\", fontWeight: \"bolder\" }}>\r\n                <input\r\n                  style={{ width: \"80px\", textAlign: \"center\" }}\r\n                  value={Insert}\r\n                  onChange={(e) => {\r\n                    setInsert(Math.round(+e.target.value * 100) / 100);\r\n                    setListing(\r\n                      +Manufacturing +\r\n                        +Inspection +\r\n                        +Packaging +\r\n                        +Freights +\r\n                        +e.target.value +\r\n                        +PPC\r\n                    );\r\n                    setTotalOutPerUnit(\r\n                      +Manufacturing +\r\n                        +Inspection +\r\n                        +Packaging +\r\n                        +Freights +\r\n                        +e.target.value +\r\n                        +PPC +\r\n                        +RefFee +\r\n                        +FBAFee\r\n                    );\r\n                    setMarginPerUnit(\r\n                      ((+UnitsInOrder * +Revenue -\r\n                        +UnitsInOrder *\r\n                          (+Manufacturing +\r\n                            +Inspection +\r\n                            +Packaging +\r\n                            +Freights +\r\n                            +e.target.value +\r\n                            +PPC +\r\n                            +RefFee +\r\n                            +FBAFee)) /\r\n                        (+UnitsInOrder * +Revenue)) *\r\n                        100\r\n                    );\r\n                    setTotalOutPerOrder(\r\n                      +OneOrderTimeSAAS +\r\n                        +UnitsInOrder *\r\n                          (+Manufacturing +\r\n                            +Inspection +\r\n                            +Packaging +\r\n                            +Freights +\r\n                            +e.target.value +\r\n                            +PPC +\r\n                            +RefFee +\r\n                            +FBAFee)\r\n                    );\r\n                    setTotalOut(\r\n                      +Orders *\r\n                        (+OneOrderTimeSAAS +\r\n                          +UnitsInOrder *\r\n                            (+Manufacturing +\r\n                              +Inspection +\r\n                              +Packaging +\r\n                              +Freights +\r\n                              +e.target.value +\r\n                              +PPC +\r\n                              +RefFee +\r\n                              +FBAFee))\r\n                    );\r\n                    setTotalProfit(\r\n                      TotalIn -\r\n                        +Orders *\r\n                          (+OneOrderTimeSAAS +\r\n                            +UnitsInOrder *\r\n                              (+Manufacturing +\r\n                                +Inspection +\r\n                                +Packaging +\r\n                                +Freights +\r\n                                +e.target.value +\r\n                                +PPC +\r\n                                +RefFee +\r\n                                +FBAFee))\r\n                    );\r\n                    setTotalMargin(\r\n                      ((TotalIn -\r\n                        +Orders *\r\n                          (+OneOrderTimeSAAS +\r\n                            +UnitsInOrder *\r\n                              (+Manufacturing +\r\n                                +Inspection +\r\n                                +Packaging +\r\n                                +Freights +\r\n                                +e.target.value +\r\n                                +PPC +\r\n                                +RefFee +\r\n                                +FBAFee))) /\r\n                        +TotalIn) *\r\n                        100\r\n                    );\r\n                  }}\r\n                  type=\"number\"\r\n                  min=\"0.00\"\r\n                  max=\"100000000.00\"\r\n                  step=\"0.01\"\r\n                />\r\n              </td>\r\n              <td\r\n                style={{ width: \"30px\", color: \"blue\", fontWeight: \"bolder\" }}\r\n              >\r\n                {\"$\"}\r\n              </td>\r\n            </div>\r\n          </tr>\r\n          <tr>\r\n            <div style={{ textAlign: \"center\" }}>\r\n              <td\r\n                style={{ width: \"154px\", color: \"blue\", fontWeight: \"bolder\" }}\r\n              >\r\n                PPC:{\" \"}\r\n              </td>\r\n              <td style={{ color: \"blue\", fontWeight: \"bolder\" }}>\r\n                <input\r\n                  style={{ width: \"80px\", textAlign: \"center\" }}\r\n                  value={PPC}\r\n                  onChange={(e) => {\r\n                    setPPC(Math.round(+e.target.value * 100) / 100);\r\n                    setListing(\r\n                      +Manufacturing +\r\n                        +Inspection +\r\n                        +Packaging +\r\n                        +Freights +\r\n                        +Insert +\r\n                        +e.target.value\r\n                    );\r\n                    setTotalOutPerUnit(\r\n                      +Manufacturing +\r\n                        +Inspection +\r\n                        +Packaging +\r\n                        +Freights +\r\n                        +Insert +\r\n                        +e.target.value +\r\n                        +RefFee +\r\n                        +FBAFee\r\n                    );\r\n                    setMarginPerUnit(\r\n                      ((+UnitsInOrder * +Revenue -\r\n                        +UnitsInOrder *\r\n                          (+Manufacturing +\r\n                            +Inspection +\r\n                            +Packaging +\r\n                            +Freights +\r\n                            +Insert +\r\n                            +e.target.value +\r\n                            +RefFee +\r\n                            +FBAFee)) /\r\n                        (+UnitsInOrder * +Revenue)) *\r\n                        100\r\n                    );\r\n                    setTotalOutPerOrder(\r\n                      +OneOrderTimeSAAS +\r\n                        +UnitsInOrder *\r\n                          (+Manufacturing +\r\n                            +Inspection +\r\n                            +Packaging +\r\n                            +Freights +\r\n                            +Insert +\r\n                            +PPC +\r\n                            +RefFee +\r\n                            +FBAFee)\r\n                    );\r\n                    setTotalOut(\r\n                      +Orders *\r\n                        (+OneOrderTimeSAAS +\r\n                          +UnitsInOrder *\r\n                            (+Manufacturing +\r\n                              +Inspection +\r\n                              +Packaging +\r\n                              +Freights +\r\n                              +Insert +\r\n                              +e.target.value +\r\n                              +RefFee +\r\n                              +FBAFee))\r\n                    );\r\n                    setTotalProfit(\r\n                      TotalIn -\r\n                        +Orders *\r\n                          (+OneOrderTimeSAAS +\r\n                            +UnitsInOrder *\r\n                              (+Manufacturing +\r\n                                +Inspection +\r\n                                +Packaging +\r\n                                +Freights +\r\n                                +Insert +\r\n                                +e.target.value +\r\n                                +RefFee +\r\n                                +FBAFee))\r\n                    );\r\n                    setTotalMargin(\r\n                      ((TotalIn -\r\n                        +Orders *\r\n                          (+OneOrderTimeSAAS +\r\n                            +UnitsInOrder *\r\n                              (+Manufacturing +\r\n                                +Inspection +\r\n                                +Packaging +\r\n                                +Freights +\r\n                                +Insert +\r\n                                +e.target.value +\r\n                                +RefFee +\r\n                                +FBAFee))) /\r\n                        +TotalIn) *\r\n                        100\r\n                    );\r\n                  }}\r\n                  type=\"number\"\r\n                  min=\"0.00\"\r\n                  max=\"100000000.00\"\r\n                  step=\"0.01\"\r\n                />\r\n              </td>\r\n              <td\r\n                style={{ width: \"30px\", color: \"blue\", fontWeight: \"bolder\" }}\r\n              >\r\n                {\"$\"}\r\n              </td>\r\n            </div>\r\n          </tr>\r\n          <tr>\r\n            <div style={{ textAlign: \"center\" }}>\r\n              <td\r\n                style={{ width: \"154px\", color: \"blue\", fontWeight: \"bolder\" }}\r\n              >\r\n                Listing:{\" \"}\r\n              </td>\r\n              <td style={{ color: \"blue\", fontWeight: \"bolder\" }}>\r\n                <input\r\n                  style={{ width: \"80px\", textAlign: \"center\" }}\r\n                  value={Math.round(Listing * 100) / 100}\r\n                  type=\"number\"\r\n                  min=\"0.00\"\r\n                  max=\"100000000.00\"\r\n                  step=\"0.01\"\r\n                  disabled\r\n                />\r\n              </td>\r\n              <td\r\n                style={{ width: \"30px\", color: \"blue\", fontWeight: \"bolder\" }}\r\n              >\r\n                {\"$\"}\r\n              </td>\r\n            </div>\r\n          </tr>{\" \"}\r\n          <tr>\r\n            <div style={{ textAlign: \"center\" }}>\r\n              <td\r\n                style={{ width: \"154px\", color: \"blue\", fontWeight: \"bolder\" }}\r\n              >\r\n                Revenue:\r\n              </td>\r\n              <td style={{ color: \"blue\", fontWeight: \"bolder\" }}>\r\n                <input\r\n                  style={{ width: \"80px\", textAlign: \"center\" }}\r\n                  value={Revenue}\r\n                  onChange={(e) => {\r\n                    setRevenue(Math.round(+e.target.value * 100) / 100);\r\n                    setMarginPerUnit(\r\n                      ((+UnitsInOrder * +e.target.value -\r\n                        +UnitsInOrder *\r\n                          (+Manufacturing +\r\n                            +Inspection +\r\n                            +Packaging +\r\n                            +Freights +\r\n                            +Insert +\r\n                            +PPC +\r\n                            0.15 * +e.target.value +\r\n                            0.25 * +e.target.value)) /\r\n                        (+UnitsInOrder * +e.target.value)) *\r\n                        100\r\n                    );\r\n                    setTotalOutPerUnit(\r\n                      +Manufacturing +\r\n                        +Inspection +\r\n                        +Packaging +\r\n                        +Freights +\r\n                        +Insert +\r\n                        +PPC +\r\n                        0.15 * +e.target.value +\r\n                        0.25 * +e.target.value\r\n                    );\r\n                    setRefFee(0.15 * +e.target.value);\r\n                    setFBAFee(0.25 * +e.target.value);\r\n                    setTotalInPerOrder(+UnitsInOrder * +e.target.value);\r\n                    setTotalOutPerOrder(\r\n                      (+Manufacturing +\r\n                        +Inspection +\r\n                        +Packaging +\r\n                        +Freights +\r\n                        +Insert +\r\n                        +PPC +\r\n                        0.15 * +e.target.value +\r\n                        0.25 * +e.target.value) *\r\n                        +UnitsInOrder +\r\n                        OneOrderTimeSAAS\r\n                    );\r\n                    setTotalIn(+e.target.value * +UnitsInOrder * +Orders);\r\n                    setTotalOut(\r\n                      ((+Manufacturing +\r\n                        +Inspection +\r\n                        +Packaging +\r\n                        +Freights +\r\n                        +Insert +\r\n                        +PPC +\r\n                        0.15 * +e.target.value +\r\n                        0.25 * +e.target.value) *\r\n                        +UnitsInOrder +\r\n                        OneOrderTimeSAAS) *\r\n                        +Orders +\r\n                        +TotalOneTime\r\n                    );\r\n                    setTotalProfit(\r\n                      +e.target.value * +UnitsInOrder * +Orders -\r\n                        (((+Manufacturing +\r\n                          +Inspection +\r\n                          +Packaging +\r\n                          +Freights +\r\n                          +Insert +\r\n                          +PPC +\r\n                          0.15 * +e.target.value +\r\n                          0.25 * +e.target.value) *\r\n                          +UnitsInOrder +\r\n                          OneOrderTimeSAAS) *\r\n                          +Orders +\r\n                          +TotalOneTime)\r\n                    );\r\n                    setTotalMargin(\r\n                      ((+e.target.value * +UnitsInOrder * +Orders -\r\n                        (((+Manufacturing +\r\n                          +Inspection +\r\n                          +Packaging +\r\n                          +Freights +\r\n                          +Insert +\r\n                          +PPC +\r\n                          0.15 * +e.target.value +\r\n                          0.25 * +e.target.value) *\r\n                          +UnitsInOrder +\r\n                          OneOrderTimeSAAS) *\r\n                          +Orders +\r\n                          +TotalOneTime)) /\r\n                        (+e.target.value * +UnitsInOrder * +Orders)) *\r\n                        100\r\n                    );\r\n                  }}\r\n                  type=\"number\"\r\n                  min=\"0.00\"\r\n                  max=\"100000000.00\"\r\n                  step=\"0.01\"\r\n                />\r\n              </td>\r\n              <td\r\n                style={{ width: \"30px\", color: \"blue\", fontWeight: \"bolder\" }}\r\n              >\r\n                {\"$\"}\r\n              </td>\r\n            </div>\r\n          </tr>\r\n          <tr>\r\n            <div style={{ textAlign: \"center\" }}>\r\n              <td\r\n                style={{ width: \"154px\", color: \"blue\", fontWeight: \"bolder\" }}\r\n              >\r\n                RefFee:{\" \"}\r\n              </td>\r\n              <td style={{ color: \"blue\", fontWeight: \"bolder\" }}>\r\n                <input\r\n                  style={{ width: \"80px\", textAlign: \"center\" }}\r\n                  value={Math.round(RefFee * 100) / 100}\r\n                  type=\"number\"\r\n                  min=\"0.00\"\r\n                  max=\"100000000.00\"\r\n                  step=\"0.01\"\r\n                  disabled\r\n                />\r\n              </td>\r\n              <td\r\n                style={{ width: \"30px\", color: \"blue\", fontWeight: \"bolder\" }}\r\n              >\r\n                {\"$\"}\r\n              </td>\r\n            </div>\r\n          </tr>\r\n          <tr>\r\n            <div style={{ textAlign: \"center\" }}>\r\n              <td\r\n                style={{ width: \"154px\", color: \"blue\", fontWeight: \"bolder\" }}\r\n              >\r\n                FBAFee:{\" \"}\r\n              </td>\r\n              <td style={{ color: \"blue\", fontWeight: \"bolder\" }}>\r\n                <input\r\n                  style={{ width: \"80px\", textAlign: \"center\" }}\r\n                  value={Math.round(FBAFee * 100) / 100}\r\n                  type=\"number\"\r\n                  min=\"0.00\"\r\n                  max=\"100000000.00\"\r\n                  step=\"0.01\"\r\n                  disabled\r\n                />\r\n              </td>\r\n              <td\r\n                style={{ width: \"30px\", color: \"blue\", fontWeight: \"bolder\" }}\r\n              >\r\n                {\"$\"}\r\n              </td>\r\n            </div>\r\n          </tr>\r\n          <tr>\r\n            <div style={{ textAlign: \"center\" }}>\r\n              <td\r\n                style={{ width: \"154px\", color: \"blue\", fontWeight: \"bolder\" }}\r\n              >\r\n                TotalOutPerUnit:\r\n              </td>\r\n              <td style={{ color: \"blue\", fontWeight: \"bolder\" }}>\r\n                <input\r\n                  style={{ width: \"80px\", textAlign: \"center\" }}\r\n                  value={Math.round(TotalOutPerUnit * 100) / 100}\r\n                  type=\"number\"\r\n                  min=\"0.00\"\r\n                  max=\"100000000.00\"\r\n                  step=\"0.01\"\r\n                  disabled\r\n                />\r\n              </td>\r\n              <td\r\n                style={{ width: \"30px\", color: \"blue\", fontWeight: \"bolder\" }}\r\n              >\r\n                {\"$\"}\r\n              </td>\r\n            </div>\r\n          </tr>\r\n          <tr>\r\n            <div style={{ textAlign: \"center\" }}>\r\n              <td\r\n                style={{ width: \"154px\", color: \"blue\", fontWeight: \"bolder\" }}\r\n              >\r\n                OneOrderTimeSAAS:\r\n              </td>\r\n              <td style={{ color: \"blue\", fontWeight: \"bolder\" }}>\r\n                <input\r\n                  style={{ width: \"80px\", textAlign: \"center\" }}\r\n                  value={OneOrderTimeSAAS}\r\n                  onChange={(e) => {\r\n                    setOneOrderTimeSAAS(\r\n                      Math.round(+e.target.value * 100) / 100\r\n                    );\r\n                    setTotalSAAS(+Orders * +e.target.value);\r\n                    setTotalOutPerOrder(\r\n                      +e.target.value +\r\n                        +UnitsInOrder *\r\n                          (+Manufacturing +\r\n                            +Inspection +\r\n                            +Packaging +\r\n                            +Freights +\r\n                            +Insert +\r\n                            +PPC +\r\n                            +RefFee +\r\n                            +FBAFee)\r\n                    );\r\n                    setTotalOut(\r\n                      +Orders *\r\n                        (+e.target.value +\r\n                          +UnitsInOrder *\r\n                            (+Manufacturing +\r\n                              +Inspection +\r\n                              +Packaging +\r\n                              +Freights +\r\n                              +Insert +\r\n                              +PPC +\r\n                              +RefFee +\r\n                              +FBAFee))\r\n                    );\r\n                    setTotalProfit(\r\n                      TotalIn -\r\n                        +Orders *\r\n                          (+e.target.value +\r\n                            +UnitsInOrder *\r\n                              (+Manufacturing +\r\n                                +Inspection +\r\n                                +Packaging +\r\n                                +Freights +\r\n                                +Insert +\r\n                                +PPC +\r\n                                +RefFee +\r\n                                +FBAFee))\r\n                    );\r\n                    setTotalMargin(\r\n                      ((TotalIn -\r\n                        +Orders *\r\n                          (+e.target.value +\r\n                            +UnitsInOrder *\r\n                              (+Manufacturing +\r\n                                +Inspection +\r\n                                +Packaging +\r\n                                +Freights +\r\n                                +Insert +\r\n                                +PPC +\r\n                                +RefFee +\r\n                                +FBAFee))) /\r\n                        +TotalIn) *\r\n                        100\r\n                    );\r\n                  }}\r\n                  type=\"number\"\r\n                  min=\"0.00\"\r\n                  max=\"100000000.00\"\r\n                  step=\"0.01\"\r\n                />\r\n              </td>\r\n              <td\r\n                style={{ width: \"30px\", color: \"blue\", fontWeight: \"bolder\" }}\r\n              >\r\n                {\"$\"}\r\n              </td>\r\n            </div>\r\n          </tr>\r\n          <tr>\r\n            <div style={{ textAlign: \"center\" }}>\r\n              <td\r\n                style={{ width: \"154px\", color: \"blue\", fontWeight: \"bolder\" }}\r\n              >\r\n                TotalSAAS:\r\n              </td>\r\n              <td style={{ color: \"blue\", fontWeight: \"bolder\" }}>\r\n                <input\r\n                  style={{ width: \"80px\", textAlign: \"center\" }}\r\n                  value={Math.round(TotalSAAS * 100) / 100}\r\n                  type=\"number\"\r\n                  min=\"0.00\"\r\n                  max=\"100000000.00\"\r\n                  step=\"0.01\"\r\n                  disabled\r\n                />\r\n              </td>\r\n              <td\r\n                style={{ width: \"30px\", color: \"blue\", fontWeight: \"bolder\" }}\r\n              >\r\n                {\"$\"}\r\n              </td>\r\n            </div>\r\n          </tr>\r\n          <tr>\r\n            <div style={{ textAlign: \"center\" }}>\r\n              <td\r\n                style={{ width: \"154px\", color: \"blue\", fontWeight: \"bolder\" }}\r\n              >\r\n                LLC:\r\n              </td>\r\n              <td style={{ color: \"blue\", fontWeight: \"bolder\" }}>\r\n                <input\r\n                  style={{ width: \"80px\", textAlign: \"center\" }}\r\n                  value={LLC}\r\n                  onChange={(e) => {\r\n                    setLLC(Math.round(+e.target.value * 100) / 100);\r\n                    setTotalOneTime(\r\n                      +e.target.value +\r\n                        +Trademark +\r\n                        +Photographing +\r\n                        +Unboxing +\r\n                        +InsertDesign +\r\n                        +PackagingDesign +\r\n                        +Samples\r\n                    );\r\n                    setTotalOut(\r\n                      +TotalOutPerOrder * +Orders +\r\n                        (+e.target.value +\r\n                          +Trademark +\r\n                          +Photographing +\r\n                          +Unboxing +\r\n                          +InsertDesign +\r\n                          +PackagingDesign +\r\n                          +Samples)\r\n                    );\r\n                    setTotalProfit(\r\n                      TotalIn -\r\n                        (+TotalOutPerOrder * +Orders +\r\n                          (+e.target.value +\r\n                            +Trademark +\r\n                            +Photographing +\r\n                            +Unboxing +\r\n                            +InsertDesign +\r\n                            +PackagingDesign +\r\n                            +Samples))\r\n                    );\r\n                    setTotalMargin(\r\n                      ((TotalIn -\r\n                        (+TotalOutPerOrder * +Orders +\r\n                          (+e.target.value +\r\n                            +Trademark +\r\n                            +Photographing +\r\n                            +Unboxing +\r\n                            +InsertDesign +\r\n                            +PackagingDesign +\r\n                            +Samples))) /\r\n                        +TotalIn) *\r\n                        100\r\n                    );\r\n                  }}\r\n                  type=\"number\"\r\n                  min=\"0.00\"\r\n                  max=\"100000000.00\"\r\n                  step=\"0.01\"\r\n                />\r\n              </td>\r\n              <td\r\n                style={{ width: \"30px\", color: \"blue\", fontWeight: \"bolder\" }}\r\n              >\r\n                {\"$\"}\r\n              </td>\r\n            </div>\r\n          </tr>\r\n          <tr>\r\n            <div style={{ textAlign: \"center\" }}>\r\n              <td\r\n                style={{ width: \"154px\", color: \"blue\", fontWeight: \"bolder\" }}\r\n              >\r\n                Trademark:\r\n              </td>\r\n              <td style={{ color: \"blue\", fontWeight: \"bolder\" }}>\r\n                <input\r\n                  style={{ width: \"80px\", textAlign: \"center\" }}\r\n                  value={Trademark}\r\n                  onChange={(e) => {\r\n                    setTrademark(Math.round(+e.target.value * 100) / 100);\r\n                    setTotalOneTime(\r\n                      +LLC +\r\n                        +e.target.value +\r\n                        +Photographing +\r\n                        +Unboxing +\r\n                        +InsertDesign +\r\n                        +PackagingDesign +\r\n                        +Samples\r\n                    );\r\n                    setTotalOut(\r\n                      +TotalOutPerOrder * +Orders +\r\n                        (+LLC +\r\n                          +e.target.value +\r\n                          +Photographing +\r\n                          +Unboxing +\r\n                          +InsertDesign +\r\n                          +PackagingDesign +\r\n                          +Samples)\r\n                    );\r\n                    setTotalProfit(\r\n                      TotalIn -\r\n                        (+TotalOutPerOrder * +Orders +\r\n                          (+LLC +\r\n                            +e.target.value +\r\n                            +Photographing +\r\n                            +Unboxing +\r\n                            +InsertDesign +\r\n                            +PackagingDesign +\r\n                            +Samples))\r\n                    );\r\n                    setTotalMargin(\r\n                      ((TotalIn -\r\n                        (+TotalOutPerOrder * +Orders +\r\n                          (+LLC +\r\n                            +e.target.value +\r\n                            +Photographing +\r\n                            +Unboxing +\r\n                            +InsertDesign +\r\n                            +PackagingDesign +\r\n                            +Samples))) /\r\n                        +TotalIn) *\r\n                        100\r\n                    );\r\n                  }}\r\n                  type=\"number\"\r\n                  min=\"0.00\"\r\n                  max=\"100000000.00\"\r\n                  step=\"0.01\"\r\n                />\r\n              </td>\r\n              <td\r\n                style={{ width: \"30px\", color: \"blue\", fontWeight: \"bolder\" }}\r\n              >\r\n                {\"$\"}\r\n              </td>\r\n            </div>\r\n          </tr>\r\n          <tr>\r\n            <div style={{ textAlign: \"center\" }}>\r\n              <td\r\n                style={{ width: \"154px\", color: \"blue\", fontWeight: \"bolder\" }}\r\n              >\r\n                Photographing:\r\n              </td>\r\n              <td style={{ color: \"blue\", fontWeight: \"bolder\" }}>\r\n                <input\r\n                  style={{ width: \"80px\", textAlign: \"center\" }}\r\n                  value={Photographing}\r\n                  onChange={(e) => {\r\n                    setPhotographing(Math.round(+e.target.value * 100) / 100);\r\n                    setTotalOneTime(\r\n                      +LLC +\r\n                        +Trademark +\r\n                        +e.target.value +\r\n                        +Unboxing +\r\n                        +InsertDesign +\r\n                        +PackagingDesign +\r\n                        +Samples\r\n                    );\r\n                    setTotalOut(\r\n                      +TotalOutPerOrder * +Orders +\r\n                        (+LLC +\r\n                          +Trademark +\r\n                          +e.target.value +\r\n                          +Unboxing +\r\n                          +InsertDesign +\r\n                          +PackagingDesign +\r\n                          +Samples)\r\n                    );\r\n                    setTotalProfit(\r\n                      TotalIn -\r\n                        (+TotalOutPerOrder * +Orders +\r\n                          (+LLC +\r\n                            +Trademark +\r\n                            +e.target.value +\r\n                            +Unboxing +\r\n                            +InsertDesign +\r\n                            +PackagingDesign +\r\n                            +Samples))\r\n                    );\r\n                    setTotalMargin(\r\n                      ((TotalIn -\r\n                        (+TotalOutPerOrder * +Orders +\r\n                          (+LLC +\r\n                            +Trademark +\r\n                            +e.target.value +\r\n                            +Unboxing +\r\n                            +InsertDesign +\r\n                            +PackagingDesign +\r\n                            +Samples))) /\r\n                        +TotalIn) *\r\n                        100\r\n                    );\r\n                  }}\r\n                  type=\"number\"\r\n                  min=\"0.00\"\r\n                  max=\"100000000.00\"\r\n                  step=\"0.01\"\r\n                />\r\n              </td>\r\n              <td\r\n                style={{ width: \"30px\", color: \"blue\", fontWeight: \"bolder\" }}\r\n              >\r\n                {\"$\"}\r\n              </td>\r\n            </div>\r\n          </tr>\r\n          <tr>\r\n            <div style={{ textAlign: \"center\" }}>\r\n              <td\r\n                style={{ width: \"154px\", color: \"blue\", fontWeight: \"bolder\" }}\r\n              >\r\n                Unboxing:\r\n              </td>\r\n              <td style={{ color: \"blue\", fontWeight: \"bolder\" }}>\r\n                <input\r\n                  style={{ width: \"80px\", textAlign: \"center\" }}\r\n                  value={Unboxing}\r\n                  onChange={(e) => {\r\n                    setUnboxing(Math.round(+e.target.value * 100) / 100);\r\n                    setTotalOneTime(\r\n                      +LLC +\r\n                        +Trademark +\r\n                        +Photographing +\r\n                        +e.target.value +\r\n                        +InsertDesign +\r\n                        +PackagingDesign +\r\n                        +Samples\r\n                    );\r\n                    setTotalOut(\r\n                      +TotalOutPerOrder * +Orders +\r\n                        (+LLC +\r\n                          +Trademark +\r\n                          +Photographing +\r\n                          +e.target.value +\r\n                          +InsertDesign +\r\n                          +PackagingDesign +\r\n                          +Samples)\r\n                    );\r\n                    setTotalProfit(\r\n                      TotalIn -\r\n                        (+TotalOutPerOrder * +Orders +\r\n                          (+LLC +\r\n                            +Trademark +\r\n                            +Photographing +\r\n                            +e.target.value +\r\n                            +InsertDesign +\r\n                            +PackagingDesign +\r\n                            +Samples))\r\n                    );\r\n                    setTotalMargin(\r\n                      ((TotalIn -\r\n                        (+TotalOutPerOrder * +Orders +\r\n                          (+LLC +\r\n                            +Trademark +\r\n                            +Photographing +\r\n                            +e.target.value +\r\n                            +InsertDesign +\r\n                            +PackagingDesign +\r\n                            +Samples))) /\r\n                        +TotalIn) *\r\n                        100\r\n                    );\r\n                  }}\r\n                  type=\"number\"\r\n                  min=\"0.00\"\r\n                  max=\"100000000.00\"\r\n                  step=\"0.01\"\r\n                />\r\n              </td>\r\n              <td\r\n                style={{ width: \"30px\", color: \"blue\", fontWeight: \"bolder\" }}\r\n              >\r\n                {\"$\"}\r\n              </td>\r\n            </div>\r\n          </tr>\r\n          <tr>\r\n            <div style={{ textAlign: \"center\" }}>\r\n              <td\r\n                style={{ width: \"154px\", color: \"blue\", fontWeight: \"bolder\" }}\r\n              >\r\n                InsertDesign:\r\n              </td>\r\n              <td style={{ color: \"blue\", fontWeight: \"bolder\" }}>\r\n                <input\r\n                  style={{ width: \"80px\", textAlign: \"center\" }}\r\n                  value={InsertDesign}\r\n                  onChange={(e) => {\r\n                    setInsertDesign(Math.round(+e.target.value * 100) / 100);\r\n                    setTotalOneTime(\r\n                      +LLC +\r\n                        +Trademark +\r\n                        +Photographing +\r\n                        +Unboxing +\r\n                        +e.target.value +\r\n                        +PackagingDesign +\r\n                        +Samples\r\n                    );\r\n                    setTotalOut(\r\n                      +TotalOutPerOrder * +Orders +\r\n                        (+LLC +\r\n                          +Trademark +\r\n                          +Photographing +\r\n                          +Unboxing +\r\n                          +e.target.value +\r\n                          +PackagingDesign +\r\n                          +Samples)\r\n                    );\r\n                    setTotalProfit(\r\n                      TotalIn -\r\n                        (+TotalOutPerOrder * +Orders +\r\n                          (+LLC +\r\n                            +Trademark +\r\n                            +Photographing +\r\n                            +Unboxing +\r\n                            +e.target.value +\r\n                            +PackagingDesign +\r\n                            +Samples))\r\n                    );\r\n                    setTotalMargin(\r\n                      ((TotalIn -\r\n                        (+TotalOutPerOrder * +Orders +\r\n                          (+LLC +\r\n                            +Trademark +\r\n                            +Photographing +\r\n                            +Unboxing +\r\n                            +e.target.value +\r\n                            +PackagingDesign +\r\n                            +Samples))) /\r\n                        +TotalIn) *\r\n                        100\r\n                    );\r\n                  }}\r\n                  type=\"number\"\r\n                  min=\"0.00\"\r\n                  max=\"100000000.00\"\r\n                  step=\"0.01\"\r\n                />\r\n              </td>\r\n              <td\r\n                style={{ width: \"30px\", color: \"blue\", fontWeight: \"bolder\" }}\r\n              >\r\n                {\"$\"}\r\n              </td>\r\n            </div>\r\n          </tr>\r\n          <tr>\r\n            <div style={{ textAlign: \"center\" }}>\r\n              <td\r\n                style={{ width: \"154px\", color: \"blue\", fontWeight: \"bolder\" }}\r\n              >\r\n                PackagingDesign:\r\n              </td>\r\n              <td style={{ color: \"blue\", fontWeight: \"bolder\" }}>\r\n                <input\r\n                  style={{ width: \"80px\", textAlign: \"center\" }}\r\n                  value={PackagingDesign}\r\n                  onChange={(e) => {\r\n                    setPackagingDesign(Math.round(+e.target.value * 100) / 100);\r\n                    setTotalOneTime(\r\n                      +LLC +\r\n                        +Trademark +\r\n                        +Photographing +\r\n                        +Unboxing +\r\n                        +InsertDesign +\r\n                        +e.target.value +\r\n                        +Samples\r\n                    );\r\n                    setTotalOut(\r\n                      +TotalOutPerOrder * +Orders +\r\n                        (+LLC +\r\n                          +Trademark +\r\n                          +Photographing +\r\n                          +Unboxing +\r\n                          +InsertDesign +\r\n                          +e.target.value +\r\n                          +Samples)\r\n                    );\r\n                    setTotalProfit(\r\n                      TotalIn -\r\n                        (+TotalOutPerOrder * +Orders +\r\n                          (+LLC +\r\n                            +Trademark +\r\n                            +Photographing +\r\n                            +Unboxing +\r\n                            +InsertDesign +\r\n                            +e.target.value +\r\n                            +Samples))\r\n                    );\r\n                    setTotalMargin(\r\n                      ((TotalIn -\r\n                        (+TotalOutPerOrder * +Orders +\r\n                          (+LLC +\r\n                            +Trademark +\r\n                            +Photographing +\r\n                            +Unboxing +\r\n                            +InsertDesign +\r\n                            +e.target.value +\r\n                            +Samples))) /\r\n                        +TotalIn) *\r\n                        100\r\n                    );\r\n                  }}\r\n                  type=\"number\"\r\n                  min=\"0.00\"\r\n                  max=\"100000000.00\"\r\n                  step=\"0.01\"\r\n                />\r\n              </td>\r\n              <td\r\n                style={{ width: \"30px\", color: \"blue\", fontWeight: \"bolder\" }}\r\n              >\r\n                {\"$\"}\r\n              </td>\r\n            </div>\r\n          </tr>\r\n          <tr>\r\n            <div style={{ textAlign: \"center\" }}>\r\n              <td\r\n                style={{ width: \"154px\", color: \"blue\", fontWeight: \"bolder\" }}\r\n              >\r\n                Samples:\r\n              </td>\r\n              <td style={{ color: \"blue\", fontWeight: \"bolder\" }}>\r\n                <input\r\n                  style={{ width: \"80px\", textAlign: \"center\" }}\r\n                  value={Samples}\r\n                  onChange={(e) => {\r\n                    setSamples(Math.round(+e.target.value * 100) / 100);\r\n                    setTotalOneTime(\r\n                      +LLC +\r\n                        +Trademark +\r\n                        +Photographing +\r\n                        +Unboxing +\r\n                        +InsertDesign +\r\n                        +PackagingDesign +\r\n                        +e.target.value\r\n                    );\r\n                    setTotalOut(\r\n                      +TotalOutPerOrder * +Orders +\r\n                        (+LLC +\r\n                          +Trademark +\r\n                          +Photographing +\r\n                          +Unboxing +\r\n                          +InsertDesign +\r\n                          +PackagingDesign +\r\n                          +e.target.value)\r\n                    );\r\n                    setTotalProfit(\r\n                      TotalIn -\r\n                        (+TotalOutPerOrder * +Orders +\r\n                          (+LLC +\r\n                            +Trademark +\r\n                            +Photographing +\r\n                            +Unboxing +\r\n                            +InsertDesign +\r\n                            +PackagingDesign +\r\n                            +e.target.value))\r\n                    );\r\n                    setTotalMargin(\r\n                      ((TotalIn -\r\n                        (+TotalOutPerOrder * +Orders +\r\n                          (+LLC +\r\n                            +Trademark +\r\n                            +Photographing +\r\n                            +Unboxing +\r\n                            +InsertDesign +\r\n                            +PackagingDesign +\r\n                            +e.target.value))) /\r\n                        +TotalIn) *\r\n                        100\r\n                    );\r\n                  }}\r\n                  type=\"number\"\r\n                  min=\"0.00\"\r\n                  max=\"100000000.00\"\r\n                  step=\"0.01\"\r\n                />\r\n              </td>\r\n              <td\r\n                style={{ width: \"30px\", color: \"blue\", fontWeight: \"bolder\" }}\r\n              >\r\n                {\"$\"}\r\n              </td>\r\n            </div>\r\n          </tr>\r\n          <tr>\r\n            <div style={{ textAlign: \"center\" }}>\r\n              <td\r\n                style={{ width: \"154px\", color: \"blue\", fontWeight: \"bolder\" }}\r\n              >\r\n                TotalOneTime:\r\n              </td>\r\n              <td style={{ color: \"blue\", fontWeight: \"bolder\" }}>\r\n                <input\r\n                  style={{ width: \"80px\", textAlign: \"center\" }}\r\n                  value={Math.round(TotalOneTime * 100) / 100}\r\n                  type=\"number\"\r\n                  min=\"0.00\"\r\n                  max=\"100000000.00\"\r\n                  step=\"0.01\"\r\n                  disabled\r\n                />\r\n              </td>\r\n              <td\r\n                style={{ width: \"30px\", color: \"blue\", fontWeight: \"bolder\" }}\r\n              >\r\n                {\"$\"}\r\n              </td>\r\n            </div>\r\n          </tr>\r\n          <tr>\r\n            <div style={{ textAlign: \"center\" }}>\r\n              <td\r\n                style={{ width: \"154px\", color: \"blue\", fontWeight: \"bolder\" }}\r\n              >\r\n                UnitsInOrder:\r\n              </td>\r\n              <td style={{ color: \"blue\", fontWeight: \"bolder\" }}>\r\n                <input\r\n                  style={{ width: \"80px\", textAlign: \"center\" }}\r\n                  value={UnitsInOrder}\r\n                  onChange={(e) => {\r\n                    setUnitsInOrder(Math.round(+e.target.value * 100) / 100);\r\n                    setMarginPerUnit(\r\n                      ((+e.target.value * +Revenue -\r\n                        +e.target.value * +TotalOutPerUnit) /\r\n                        (+e.target.value * +Revenue)) *\r\n                        100\r\n                    );\r\n                    setTotalOutPerOrder(\r\n                      +OneOrderTimeSAAS + +e.target.value * +TotalOutPerUnit\r\n                    );\r\n                    setTotalInPerOrder(+e.target.value * +Revenue);\r\n                    setTotalIn(+e.target.value * +Revenue * +Orders);\r\n                    setTotalOut(\r\n                      (+OneOrderTimeSAAS + +e.target.value * +TotalOutPerUnit) *\r\n                        +Orders\r\n                    );\r\n                    setTotalProfit(\r\n                      +TotalIn -\r\n                        (+OneOrderTimeSAAS +\r\n                          +e.target.value * +TotalOutPerUnit) *\r\n                          +Orders\r\n                    );\r\n                    setTotalMargin(\r\n                      ((+TotalIn -\r\n                        (+OneOrderTimeSAAS +\r\n                          +e.target.value * +TotalOutPerUnit) *\r\n                          +Orders) /\r\n                        +TotalIn) *\r\n                        100\r\n                    );\r\n                  }}\r\n                  type=\"number\"\r\n                  min=\"0.00\"\r\n                  max=\"100000000.00\"\r\n                  step=\"0.01\"\r\n                />\r\n              </td>\r\n              <td\r\n                style={{ width: \"30px\", color: \"blue\", fontWeight: \"bolder\" }}\r\n              >\r\n                {\" \"}\r\n              </td>\r\n            </div>\r\n          </tr>\r\n          <tr>\r\n            <div style={{ textAlign: \"center\" }}>\r\n              <td\r\n                style={{ width: \"154px\", color: \"blue\", fontWeight: \"bolder\" }}\r\n              >\r\n                TotalOutPerOrder:\r\n              </td>\r\n              <td style={{ color: \"blue\", fontWeight: \"bolder\" }}>\r\n                <input\r\n                  style={{ width: \"80px\", textAlign: \"center\" }}\r\n                  value={Math.round(TotalOutPerOrder * 100) / 100}\r\n                  type=\"number\"\r\n                  min=\"0.00\"\r\n                  max=\"100000000.00\"\r\n                  step=\"0.01\"\r\n                  disabled\r\n                />\r\n              </td>\r\n              <td\r\n                style={{ width: \"30px\", color: \"blue\", fontWeight: \"bolder\" }}\r\n              >\r\n                {\"$\"}\r\n              </td>\r\n            </div>\r\n          </tr>\r\n          <tr>\r\n            <div style={{ textAlign: \"center\" }}>\r\n              <td\r\n                style={{ width: \"154px\", color: \"blue\", fontWeight: \"bolder\" }}\r\n              >\r\n                TotalInPerOrder:\r\n              </td>\r\n              <td style={{ color: \"blue\", fontWeight: \"bolder\" }}>\r\n                <input\r\n                  style={{ width: \"80px\", textAlign: \"center\" }}\r\n                  value={Math.round(TotalInPerOrder * 100) / 100}\r\n                  type=\"number\"\r\n                  min=\"0.00\"\r\n                  max=\"100000000.00\"\r\n                  step=\"0.01\"\r\n                  disabled\r\n                />\r\n              </td>\r\n              <td\r\n                style={{ width: \"30px\", color: \"blue\", fontWeight: \"bolder\" }}\r\n              >\r\n                {\"$\"}\r\n              </td>\r\n            </div>\r\n          </tr>\r\n          <tr>\r\n            <div style={{ textAlign: \"center\" }}>\r\n              <td\r\n                style={{ width: \"154px\", color: \"blue\", fontWeight: \"bolder\" }}\r\n              >\r\n                MarginPerUnit:\r\n              </td>\r\n              <td style={{ color: \"blue\", fontWeight: \"bolder\" }}>\r\n                <input\r\n                  style={{ width: \"80px\", textAlign: \"center\" }}\r\n                  value={Math.round(MarginPerUnit * 100) / 100}\r\n                  type=\"number\"\r\n                  min=\"0.00\"\r\n                  max=\"100000000.00\"\r\n                  step=\"0.01\"\r\n                  disabled\r\n                />\r\n              </td>\r\n              <td\r\n                style={{ width: \"30px\", color: \"blue\", fontWeight: \"bolder\" }}\r\n              >\r\n                {\"%\"}\r\n              </td>\r\n            </div>\r\n          </tr>\r\n          <tr>\r\n            <div style={{ textAlign: \"center\" }}>\r\n              <td\r\n                style={{ width: \"154px\", color: \"blue\", fontWeight: \"bolder\" }}\r\n              >\r\n                Orders:\r\n              </td>\r\n              <td style={{ color: \"blue\", fontWeight: \"bolder\" }}>\r\n                <input\r\n                  style={{ width: \"80px\", textAlign: \"center\" }}\r\n                  value={Orders}\r\n                  onChange={(e) => {\r\n                    setOrders(Math.round(+e.target.value * 100) / 100);\r\n                    setTotalSAAS(+e.target.value * OneOrderTimeSAAS);\r\n                    setTotalIn(+TotalInPerOrder * +e.target.value);\r\n                    setTotalOut(\r\n                      +TotalOutPerOrder * +e.target.value +\r\n                        +TotalOneTime +\r\n                        +e.target.value * OneOrderTimeSAAS\r\n                    );\r\n                    setTotalProfit(\r\n                      +TotalInPerOrder * +e.target.value -\r\n                        (+TotalOutPerOrder * +e.target.value + +TotalOneTime)\r\n                    );\r\n                    setTotalMargin(\r\n                      ((+TotalInPerOrder * +e.target.value -\r\n                        (+TotalOutPerOrder * +e.target.value + +TotalOneTime)) /\r\n                        (+TotalInPerOrder * +e.target.value)) *\r\n                        100\r\n                    );\r\n                  }}\r\n                  type=\"number\"\r\n                  min=\"0.00\"\r\n                  max=\"100000000.00\"\r\n                  step=\"0.01\"\r\n                />\r\n              </td>\r\n              <td\r\n                style={{ width: \"30px\", color: \"blue\", fontWeight: \"bolder\" }}\r\n              >\r\n                {\" \"}\r\n              </td>\r\n            </div>\r\n          </tr>\r\n          <tr>\r\n            <div style={{ textAlign: \"center\" }}>\r\n              <td\r\n                style={{ width: \"154px\", color: \"blue\", fontWeight: \"bolder\" }}\r\n              >\r\n                TotalIn:\r\n              </td>\r\n              <td style={{ color: \"blue\", fontWeight: \"bolder\" }}>\r\n                <input\r\n                  style={{ width: \"80px\", textAlign: \"center\" }}\r\n                  value={Math.round(TotalIn * 100) / 100}\r\n                  type=\"number\"\r\n                  min=\"0.00\"\r\n                  max=\"100000000.00\"\r\n                  step=\"0.01\"\r\n                  disabled\r\n                />\r\n              </td>\r\n              <td\r\n                style={{ width: \"30px\", color: \"blue\", fontWeight: \"bolder\" }}\r\n              >\r\n                {\"$\"}\r\n              </td>\r\n            </div>\r\n          </tr>\r\n          <tr>\r\n            <div style={{ textAlign: \"center\" }}>\r\n              <td\r\n                style={{ width: \"154px\", color: \"blue\", fontWeight: \"bolder\" }}\r\n              >\r\n                TotalOut:\r\n              </td>\r\n              <td style={{ color: \"blue\", fontWeight: \"bolder\" }}>\r\n                <input\r\n                  style={{ width: \"80px\", textAlign: \"center\" }}\r\n                  value={Math.round(TotalOut * 100) / 100}\r\n                  type=\"number\"\r\n                  min=\"0.00\"\r\n                  max=\"100000000.00\"\r\n                  step=\"0.01\"\r\n                  disabled\r\n                />\r\n              </td>\r\n              <td\r\n                style={{ width: \"30px\", color: \"blue\", fontWeight: \"bolder\" }}\r\n              >\r\n                {\"$\"}\r\n              </td>\r\n            </div>\r\n          </tr>\r\n          <tr>\r\n            <div style={{ textAlign: \"center\" }}>\r\n              <td\r\n                style={{ width: \"154px\", color: \"blue\", fontWeight: \"bolder\" }}\r\n              >\r\n                TotalProfit:\r\n              </td>\r\n              <td style={{ color: \"blue\", fontWeight: \"bolder\" }}>\r\n                <input\r\n                  style={{ width: \"80px\", textAlign: \"center\" }}\r\n                  value={Math.round(TotalProfit * 100) / 100}\r\n                  type=\"number\"\r\n                  min=\"0.00\"\r\n                  max=\"100000000.00\"\r\n                  step=\"0.01\"\r\n                  disabled\r\n                />\r\n              </td>\r\n              <td\r\n                style={{ width: \"30px\", color: \"blue\", fontWeight: \"bolder\" }}\r\n              >\r\n                {\"$\"}\r\n              </td>\r\n            </div>\r\n          </tr>\r\n          <tr>\r\n            <div style={{ textAlign: \"center\" }}>\r\n              <td\r\n                style={{ width: \"154px\", color: \"blue\", fontWeight: \"bolder\" }}\r\n              >\r\n                TotalMargin:\r\n              </td>\r\n              <td style={{ color: \"blue\", fontWeight: \"bolder\" }}>\r\n                <input\r\n                  style={{ width: \"80px\", textAlign: \"center\" }}\r\n                  value={Math.round(TotalMargin * 100) / 100}\r\n                  type=\"number\"\r\n                  min=\"0.00\"\r\n                  max=\"100000000.00\"\r\n                  step=\"0.01\"\r\n                  disabled\r\n                />\r\n              </td>\r\n              <td\r\n                style={{ width: \"30px\", color: \"blue\", fontWeight: \"bolder\" }}\r\n              >\r\n                {\"%\"}\r\n              </td>\r\n            </div>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <div\r\n        style={{\r\n          margin: \"auto\",\r\n          width: \"50%\",\r\n          padding: \"0px\",\r\n          backgroundColor: \"#F0F0F0\",\r\n          paddingTop: \"50px\",\r\n          padding: \"50px\",\r\n          borderRadius: \"100px\",\r\n        }}\r\n      >\r\n        <Chart data={data} />\r\n      </div>\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}