{"version":3,"sources":["Chart.js","ChartP.js","App.js","index.js"],"names":["Chart","props","data","className","isShown","LineChart","width","height","Tooltip","cursor","stroke","strokeWidth","CartesianGrid","horizontal","vertical","XAxis","dataKey","padding","right","left","YAxis","type","domain","bottom","top","minTickGap","allowDecimals","Label","value","angle","position","offset","Legend","verticalAlign","Line","name","dot","ChartP","formatter","App","useState","Manufacturing","setManufacturing","Inspection","setInspection","Packaging","setPackaging","Production","setProduction","Freights","setFreights","Landingcost","setLandingcost","Insert","setInsert","PPC","setPPC","Listing","setListing","Revenue","setRevenue","RefFee","setRefFee","FBAFee","setFBAFee","TotalOutPerUnit","setTotalOutPerUnit","OneOrderTimeSAAS","setOneOrderTimeSAAS","TotalSAAS","setTotalSAAS","LLC","setLLC","Trademark","setTrademark","Photographing","setPhotographing","Unboxing","setUnboxing","InsertDesign","setInsertDesign","PackagingDesign","setPackagingDesign","Samples","setSamples","TotalOneTime","setTotalOneTime","UnitsInOrder","setUnitsInOrder","TotalOutPerOrder","setTotalOutPerOrder","TotalInPerOrder","setTotalInPerOrder","MarginPerUnit","setMarginPerUnit","Orders","setOrders","TotalIn","setTotalIn","TotalOut","setTotalOut","TotalProfit","setTotalProfit","TotalMargin","setTotalMargin","i","push","orderNo","profitMargin","Math","round","Asimptot","l50","l30","l15","l0","datap","profit","style","textAlign","marginLeft","marginRight","color","fontWeight","onChange","e","target","min","max","step","disabled","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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,KAEbyC,KACKP,IACAF,KACG5B,KACCoB,KACGsC,EAAEC,OAAOlG,QACRe,IACAE,IACAI,IACAI,IACAE,IACAM,IACAE,MACRkC,GACD,MAGN5E,KAAK,SACL0G,IAAI,OACJC,IAAI,eACJC,KAAK,WAGT,oBACEX,MAAO,CAAEhH,MAAO,OAAQoH,MAAO,OAAQC,WAAY,UADrD,SAGG,SAGL,+BACE,oBACEL,MAAO,CACLhH,MAAO,QACPoH,MAAO,OACPC,WAAY,UAJhB,yBASA,oBAAIL,MAAO,CAAEI,MAAO,OAAQC,WAAY,UAAxC,SACE,uBACEL,MAAO,CAAEhH,MAAO,OAAQiH,UAAW,UACnC3F,MAAOe,EACPiF,SAAU,SAACC,GACTjF,EAAciE,KAAKC,MAAwB,KAAjBe,EAAEC,OAAOlG,OAAe,KAClDoB,GACGP,IAAiBoF,EAAEC,OAAOlG,QAASiB,GAEtCO,GACGX,IAAiBoF,EAAEC,OAAOlG,QAASiB,IAAaI,GAEnDS,GACGjB,IACEoF,EAAEC,OAAOlG,QACTiB,IACAI,IACAI,IACAE,GAELW,IACGzB,IACEoF,EAAEC,OAAOlG,QACTiB,IACAI,IACAI,IACAE,IACAM,IACAE,GAEL+B,KACKP,IAAgB5B,GAChB4B,KACG9C,IACCoF,EAAEC,OAAOlG,QACTiB,IACAI,IACAI,IACAE,IACAM,IACAE,MACHwB,IAAgB5B,GAClB,KAEJ+B,IACGvB,KACEoB,KACG9C,IACCoF,EAAEC,OAAOlG,QACTiB,IACAI,IACAI,IACAE,IACAM,IACAE,IAETqC,IACGL,KACG5B,KACCoB,KACG9C,IACCoF,EAAEC,OAAOlG,QACTiB,IACAI,IACAI,IACAE,IACAM,IACAE,KAEXuC,GACEL,IACGF,KACG5B,KACCoB,KACG9C,IACCoF,EAAEC,OAAOlG,QACTiB,IACAI,IACAI,IACAE,IACAM,IACAE,KAEbyC,IACIP,IACCF,KACG5B,KACCoB,KACG9C,IACCoF,EAAEC,OAAOlG,QACTiB,IACAI,IACAI,IACAE,IACAM,IACAE,MACRkC,GACD,MAGN5E,KAAK,SACL0G,IAAI,OACJC,IAAI,eACJC,KAAK,WAGT,oBACEX,MAAO,CAAEhH,MAAO,OAAQoH,MAAO,OAAQC,WAAY,UADrD,SAGG,SAGL,+BACE,oBACEL,MAAO,CACLhH,MAAO,QACPoH,MAAO,OACPC,WAAY,UAJhB,wBASA,oBAAIL,MAAO,CAAEI,MAAO,OAAQC,WAAY,UAAxC,SACE,uBACEL,MAAO,CAAEhH,MAAO,OAAQiH,UAAW,UACnC3F,MAAOiB,EACP+E,SAAU,SAACC,GACT/E,EAAa+D,KAAKC,MAAwB,KAAjBe,EAAEC,OAAOlG,OAAe,KACjDoB,GACGP,IAAiBE,IAAckF,EAAEC,OAAOlG,OAE3CwB,GACGX,IAAiBE,IAAckF,EAAEC,OAAOlG,QAASqB,GAEpDS,GACGjB,IACEE,IACAkF,EAAEC,OAAOlG,QACTqB,IACAI,IACAE,GAELW,IACGzB,IACEE,IACAkF,EAAEC,OAAOlG,QACTqB,IACAI,IACAE,IACAM,IACAE,GAEL+B,KACKP,IAAgB5B,GAChB4B,KACG9C,IACCE,IACAkF,EAAEC,OAAOlG,QACTqB,IACAI,IACAE,IACAM,IACAE,MACHwB,IAAgB5B,GAClB,KAEJ+B,IACGvB,KACEoB,KACG9C,IACCE,IACAkF,EAAEC,OAAOlG,QACTqB,IACAI,IACAE,IACAM,IACAE,IAETqC,IACGL,KACG5B,KACCoB,KACG9C,IACCE,IACAkF,EAAEC,OAAOlG,QACTqB,IACAI,IACAE,IACAM,IACAE,KAEXuC,GACEL,IACGF,KACG5B,KACCoB,KACG9C,IACCE,IACAkF,EAAEC,OAAOlG,QACTqB,IACAI,IACAE,IACAM,IACAE,KAEbyC,IACIP,IACCF,KACG5B,KACCoB,KACG9C,IACCE,IACAkF,EAAEC,OAAOlG,QACTqB,IACAI,IACAE,IACAM,IACAE,MACRkC,GACD,MAGN5E,KAAK,SACL0G,IAAI,OACJC,IAAI,eACJC,KAAK,WAGT,oBACEX,MAAO,CAAEhH,MAAO,OAAQoH,MAAO,OAAQC,WAAY,UADrD,SAGG,SAGL,+BACE,oBACEL,MAAO,CACLhH,MAAO,QACPoH,MAAO,OACPC,WAAY,UAJhB,yBASA,oBAAIL,MAAO,CAAEI,MAAO,OAAQC,WAAY,UAAxC,SACE,uBACEL,MAAO,CAAEhH,MAAO,OAAQiH,UAAW,UACnC3F,MAAOiF,KAAKC,MAAmB,IAAb/D,GAAoB,IACtC1B,KAAK,SACL0G,IAAI,OACJC,IAAI,eACJC,KAAK,OACLC,UAAQ,MAGZ,oBACEZ,MAAO,CAAEhH,MAAO,OAAQoH,MAAO,OAAQC,WAAY,UADrD,SAGG,SAGL,+BACE,qBACEL,MAAO,CACLhH,MAAO,QACPoH,MAAO,OACPC,WAAY,UAJhB,sBAOY,OAEZ,oBAAIL,MAAO,CAAEI,MAAO,OAAQC,WAAY,UAAxC,SACE,uBACEL,MAAO,CAAEhH,MAAO,OAAQiH,UAAW,UACnC3F,MAAOqB,EACP2E,SAAU,SAACC,GACT3E,EAAY2D,KAAKC,MAAwB,KAAjBe,EAAEC,OAAOlG,OAAe,KAChDwB,GAAgBL,IAAc8E,EAAEC,OAAOlG,OACvC8B,GACGjB,IACEE,IACAE,IACAgF,EAAEC,OAAOlG,QACTyB,IACAE,GAELW,IACGzB,IACEE,IACAE,IACAgF,EAAEC,OAAOlG,QACTyB,IACAE,IACAM,IACAE,GAEL+B,KACKP,IAAgB5B,GAChB4B,KACG9C,IACCE,IACAE,IACAgF,EAAEC,OAAOlG,QACTyB,IACAE,IACAM,IACAE,MACHwB,IAAgB5B,GAClB,KAEJ+B,IACGvB,KACEoB,KACG9C,IACCE,IACAE,IACAgF,EAAEC,OAAOlG,QACTyB,IACAE,IACAM,IACAE,IAETqC,IACGL,KACG5B,KACCoB,KACG9C,IACCE,IACAE,IACAgF,EAAEC,OAAOlG,QACTyB,IACAE,IACAM,IACAE,KAEXuC,GACEL,IACGF,KACG5B,KACCoB,KACG9C,IACCE,IACAE,IACAgF,EAAEC,OAAOlG,QACTyB,IACAE,IACAM,IACAE,KAEbyC,IACIP,IACCF,KACG5B,KACCoB,KACG9C,IACCE,IACAE,IACAgF,EAAEC,OAAOlG,QACTyB,IACAE,IACAM,IACAE,MACRkC,GACD,MAGN5E,KAAK,SACL0G,IAAI,OACJC,IAAI,eACJC,KAAK,WAGT,oBACEX,MAAO,CAAEhH,MAAO,OAAQoH,MAAO,OAAQC,WAAY,UADrD,SAGG,SAGL,+BACE,oBACEL,MAAO,CACLhH,MAAO,QACPoH,MAAO,OACPC,WAAY,UAJhB,0BASA,oBAAIL,MAAO,CAAEI,MAAO,OAAQC,WAAY,UAAxC,SACE,uBACEL,MAAO,CAAEhH,MAAO,OAAQiH,UAAW,UACnC3F,MAAOiF,KAAKC,MAAoB,IAAd3D,GAAqB,IACvC9B,KAAK,SACL0G,IAAI,OACJC,IAAI,eACJC,KAAK,OACLC,UAAQ,MAGZ,oBACEZ,MAAO,CAAEhH,MAAO,OAAQoH,MAAO,OAAQC,WAAY,UADrD,SAGG,SAGL,+BACE,qBACEL,MAAO,CACLhH,MAAO,QACPoH,MAAO,OACPC,WAAY,UAJhB,oBAOU,OAEV,oBAAIL,MAAO,CAAEI,MAAO,OAAQC,WAAY,UAAxC,SACE,uBACEL,MAAO,CAAEhH,MAAO,OAAQiH,UAAW,UACnC3F,MAAOyB,EACPuE,SAAU,SAACC,GACTvE,EAAUuD,KAAKC,MAAwB,KAAjBe,EAAEC,OAAOlG,OAAe,KAC9C8B,GACGjB,IACEE,IACAE,IACAI,IACA4E,EAAEC,OAAOlG,QACT2B,GAELW,IACGzB,IACEE,IACAE,IACAI,IACA4E,EAAEC,OAAOlG,QACT2B,IACAM,IACAE,GAEL+B,KACKP,IAAgB5B,GAChB4B,KACG9C,IACCE,IACAE,IACAI,IACA4E,EAAEC,OAAOlG,QACT2B,IACAM,IACAE,MACHwB,IAAgB5B,GAClB,KAEJ+B,IACGvB,KACEoB,KACG9C,IACCE,IACAE,IACAI,IACA4E,EAAEC,OAAOlG,QACT2B,IACAM,IACAE,IAETqC,IACGL,KACG5B,KACCoB,KACG9C,IACCE,IACAE,IACAI,IACA4E,EAAEC,OAAOlG,QACT2B,IACAM,IACAE,KAEXuC,GACEL,IACGF,KACG5B,KACCoB,KACG9C,IACCE,IACAE,IACAI,IACA4E,EAAEC,OAAOlG,QACT2B,IACAM,IACAE,KAEbyC,IACIP,IACCF,KACG5B,KACCoB,KACG9C,IACCE,IACAE,IACAI,IACA4E,EAAEC,OAAOlG,QACT2B,IACAM,IACAE,MACRkC,GACD,MAGN5E,KAAK,SACL0G,IAAI,OACJC,IAAI,eACJC,KAAK,WAGT,oBACEX,MAAO,CAAEhH,MAAO,OAAQoH,MAAO,OAAQC,WAAY,UADrD,SAGG,SAGL,+BACE,qBACEL,MAAO,CACLhH,MAAO,QACPoH,MAAO,OACPC,WAAY,UAJhB,iBAOO,OAEP,oBAAIL,MAAO,CAAEI,MAAO,OAAQC,WAAY,UAAxC,SACE,uBACEL,MAAO,CAAEhH,MAAO,OAAQiH,UAAW,UACnC3F,MAAO2B,EACPqE,SAAU,SAACC,GACTrE,EAAOqD,KAAKC,MAAwB,KAAjBe,EAAEC,OAAOlG,OAAe,KAC3C8B,GACGjB,IACEE,IACAE,IACAI,IACAI,IACAwE,EAAEC,OAAOlG,OAEdsC,IACGzB,IACEE,IACAE,IACAI,IACAI,IACAwE,EAAEC,OAAOlG,QACTiC,IACAE,GAEL+B,KACKP,IAAgB5B,GAChB4B,KACG9C,IACCE,IACAE,IACAI,IACAI,IACAwE,EAAEC,OAAOlG,QACTiC,IACAE,MACHwB,IAAgB5B,GAClB,KAEJ+B,IACGvB,KACEoB,KACG9C,IACCE,IACAE,IACAI,IACAI,IACAE,IACAM,IACAE,IAETqC,IACGL,KACG5B,KACCoB,KACG9C,IACCE,IACAE,IACAI,IACAI,IACAwE,EAAEC,OAAOlG,QACTiC,IACAE,KAEXuC,GACEL,IACGF,KACG5B,KACCoB,KACG9C,IACCE,IACAE,IACAI,IACAI,IACAwE,EAAEC,OAAOlG,QACTiC,IACAE,KAEbyC,IACIP,IACCF,KACG5B,KACCoB,KACG9C,IACCE,IACAE,IACAI,IACAI,IACAwE,EAAEC,OAAOlG,QACTiC,IACAE,MACRkC,GACD,MAGN5E,KAAK,SACL0G,IAAI,OACJC,IAAI,eACJC,KAAK,WAGT,oBACEX,MAAO,CAAEhH,MAAO,OAAQoH,MAAO,OAAQC,WAAY,UADrD,SAGG,SAGL,+BACE,qBACEL,MAAO,CACLhH,MAAO,QACPoH,MAAO,OACPC,WAAY,UAJhB,qBAOW,OAEX,oBAAIL,MAAO,CAAEI,MAAO,OAAQC,WAAY,UAAxC,SACE,uBACEL,MAAO,CAAEhH,MAAO,OAAQiH,UAAW,UACnC3F,MAAOiF,KAAKC,MAAgB,IAAVrD,GAAiB,IACnCpC,KAAK,SACL0G,IAAI,OACJC,IAAI,eACJC,KAAK,OACLC,UAAQ,MAGZ,oBACEZ,MAAO,CAAEhH,MAAO,OAAQoH,MAAO,OAAQC,WAAY,UADrD,SAGG,SAGL,+BACE,oBACEL,MAAO,CACLhH,MAAO,QACPoH,MAAO,OACPC,WAAY,UAJhB,sBASA,oBAAIL,MAAO,CAAEI,MAAO,OAAQC,WAAY,UAAxC,SACE,uBACEL,MAAO,CAAEhH,MAAO,OAAQiH,UAAW,UACnC3F,MAAO+B,EACPiE,SAAU,SAACC,GACTjE,EAAWiD,KAAKC,MAAwB,KAAjBe,EAAEC,OAAOlG,OAAe,KAC/CkE,KACKP,IAAgBsC,EAAEC,OAAOlG,OACzB2D,KACG9C,IACCE,IACAE,IACAI,IACAI,IACAE,EACD,KAAQsE,EAAEC,OAAOlG,MACjB,KAAQiG,EAAEC,OAAOlG,UACnB2D,IAAgBsC,EAAEC,OAAOlG,OAC3B,KAEJsC,IACGzB,IACEE,IACAE,IACAI,IACAI,IACAE,EACD,KAAQsE,EAAEC,OAAOlG,MACjB,KAAQiG,EAAEC,OAAOlG,OAErBkC,EAAU,KAAQ+D,EAAEC,OAAOlG,OAC3BoC,EAAU,KAAQ6D,EAAEC,OAAOlG,OAC3BgE,IAAoBL,IAAgBsC,EAAEC,OAAOlG,OAC7C8D,KACIjD,IACCE,IACAE,IACAI,IACAI,IACAE,EACD,KAAQsE,EAAEC,OAAOlG,MACjB,KAAQiG,EAAEC,OAAOlG,QAChB2D,GACDpB,IAEJ+B,IAAY2B,EAAEC,OAAOlG,OAAS2D,IAAgBQ,IAC9CK,MACK3D,IACAE,IACAE,IACAI,IACAI,IACAE,EACD,KAAQsE,EAAEC,OAAOlG,MACjB,KAAQiG,EAAEC,OAAOlG,QAChB2D,GACDpB,KACC4B,KACAV,IAELiB,IACGuB,EAAEC,OAAOlG,OAAS2D,IAAgBQ,OAC7BtD,IACDE,IACAE,IACAI,IACAI,IACAE,EACD,KAAQsE,EAAEC,OAAOlG,MACjB,KAAQiG,EAAEC,OAAOlG,QAChB2D,GACDpB,KACC4B,KACAV,KAEPmB,KACKqB,EAAEC,OAAOlG,OAAS2D,IAAgBQ,OAC/BtD,IACDE,IACAE,IACAI,IACAI,IACAE,EACD,KAAQsE,EAAEC,OAAOlG,MACjB,KAAQiG,EAAEC,OAAOlG,QAChB2D,GACDpB,KACC4B,KACAV,OACDwC,EAAEC,OAAOlG,OAAS2D,IAAgBQ,IACpC,MAGN1E,KAAK,SACL0G,IAAI,OACJC,IAAI,eACJC,KAAK,WAGT,oBACEX,MAAO,CAAEhH,MAAO,OAAQoH,MAAO,OAAQC,WAAY,UADrD,SAGG,SAGL,+BACE,qBACEL,MAAO,CACLhH,MAAO,QACPoH,MAAO,OACPC,WAAY,UAJhB,oBAOU,OAEV,oBAAIL,MAAO,CAAEI,MAAO,OAAQC,WAAY,UAAxC,SACE,uBACEL,MAAO,CAAEhH,MAAO,OAAQiH,UAAW,UACnC3F,MAAOiF,KAAKC,MAAe,IAATjD,GAAgB,IAClCxC,KAAK,SACL0G,IAAI,OACJC,IAAI,eACJC,KAAK,OACLC,UAAQ,MAGZ,oBACEZ,MAAO,CAAEhH,MAAO,OAAQoH,MAAO,OAAQC,WAAY,UADrD,SAGG,SAGL,+BACE,qBACEL,MAAO,CACLhH,MAAO,QACPoH,MAAO,OACPC,WAAY,UAJhB,oBAOU,OAEV,oBAAIL,MAAO,CAAEI,MAAO,OAAQC,WAAY,UAAxC,SACE,uBACEL,MAAO,CAAEhH,MAAO,OAAQiH,UAAW,UACnC3F,MAAOiF,KAAKC,MAAe,IAAT/C,GAAgB,IAClC1C,KAAK,SACL0G,IAAI,OACJC,IAAI,eACJC,KAAK,OACLC,UAAQ,MAGZ,oBACEZ,MAAO,CAAEhH,MAAO,OAAQoH,MAAO,OAAQC,WAAY,UADrD,SAGG,SAGL,+BACE,oBACEL,MAAO,CACLhH,MAAO,QACPoH,MAAO,OACPC,WAAY,UAJhB,8BASA,oBAAIL,MAAO,CAAEI,MAAO,OAAQC,WAAY,UAAxC,SACE,uBACEL,MAAO,CAAEhH,MAAO,OAAQiH,UAAW,UACnC3F,MAAOiF,KAAKC,MAAwB,IAAlB7C,IAAyB,IAC3C5C,KAAK,SACL0G,IAAI,OACJC,IAAI,eACJC,KAAK,OACLC,UAAQ,MAGZ,oBACEZ,MAAO,CAAEhH,MAAO,OAAQoH,MAAO,OAAQC,WAAY,UADrD,SAGG,SAGL,+BACE,oBACEL,MAAO,CACLhH,MAAO,QACPoH,MAAO,OACPC,WAAY,UAJhB,+BASA,oBAAIL,MAAO,CAAEI,MAAO,OAAQC,WAAY,UAAxC,SACE,uBACEL,MAAO,CAAEhH,MAAO,OAAQiH,UAAW,UACnC3F,MAAOuC,GACPyD,SAAU,SAACC,GACTzD,GACEyC,KAAKC,MAAwB,KAAjBe,EAAEC,OAAOlG,OAAe,KAEtC0C,IAAcyB,IAAU8B,EAAEC,OAAOlG,OACjC8D,IACGmC,EAAEC,OAAOlG,QACP2D,KACG9C,IACCE,IACAE,IACAI,IACAI,IACAE,IACAM,IACAE,IAETqC,IACGL,KACG8B,EAAEC,OAAOlG,QACR2D,KACG9C,IACCE,IACAE,IACAI,IACAI,IACAE,IACAM,IACAE,KAEXuC,GACEL,IACGF,KACG8B,EAAEC,OAAOlG,QACR2D,KACG9C,IACCE,IACAE,IACAI,IACAI,IACAE,IACAM,IACAE,KAEbyC,IACIP,IACCF,KACG8B,EAAEC,OAAOlG,QACR2D,KACG9C,IACCE,IACAE,IACAI,IACAI,IACAE,IACAM,IACAE,MACRkC,GACD,MAGN5E,KAAK,SACL0G,IAAI,OACJC,IAAI,eACJC,KAAK,WAGT,oBACEX,MAAO,CAAEhH,MAAO,OAAQoH,MAAO,OAAQC,WAAY,UADrD,SAGG,SAGL,+BACE,oBACEL,MAAO,CACLhH,MAAO,QACPoH,MAAO,OACPC,WAAY,UAJhB,wBASA,oBAAIL,MAAO,CAAEI,MAAO,OAAQC,WAAY,UAAxC,SACE,uBACEL,MAAO,CAAEhH,MAAO,OAAQiH,UAAW,UACnC3F,MAAOiF,KAAKC,MAAkB,IAAZzC,IAAmB,IACrChD,KAAK,SACL0G,IAAI,OACJC,IAAI,eACJC,KAAK,OACLC,UAAQ,MAGZ,oBACEZ,MAAO,CAAEhH,MAAO,OAAQoH,MAAO,OAAQC,WAAY,UADrD,SAGG,SAGL,+BACE,oBACEL,MAAO,CACLhH,MAAO,QACPoH,MAAO,OACPC,WAAY,UAJhB,kBASA,oBAAIL,MAAO,CAAEI,MAAO,OAAQC,WAAY,UAAxC,SACE,uBACEL,MAAO,CAAEhH,MAAO,OAAQiH,UAAW,UACnC3F,MAAO2C,GACPqD,SAAU,SAACC,GACTrD,GAAOqC,KAAKC,MAAwB,KAAjBe,EAAEC,OAAOlG,OAAe,KAC3C0D,IACGuC,EAAEC,OAAOlG,QACP6C,KACAE,KACAE,KACAE,KACAE,KACAE,IAELiB,IACGX,IAAoBM,KACjB8B,EAAEC,OAAOlG,QACR6C,KACAE,KACAE,KACAE,KACAE,KACAE,KAEPmB,GACEL,KACIR,IAAoBM,KAClB8B,EAAEC,OAAOlG,QACR6C,KACAE,KACAE,KACAE,KACAE,KACAE,MAETqB,IACIP,KACER,IAAoBM,KAClB8B,EAAEC,OAAOlG,QACR6C,KACAE,KACAE,KACAE,KACAE,KACAE,OACJc,GACD,MAGN5E,KAAK,SACL0G,IAAI,OACJC,IAAI,eACJC,KAAK,WAGT,oBACEX,MAAO,CAAEhH,MAAO,OAAQoH,MAAO,OAAQC,WAAY,UADrD,SAGG,SAGL,+BACE,oBACEL,MAAO,CACLhH,MAAO,QACPoH,MAAO,OACPC,WAAY,UAJhB,wBASA,oBAAIL,MAAO,CAAEI,MAAO,OAAQC,WAAY,UAAxC,SACE,uBACEL,MAAO,CAAEhH,MAAO,OAAQiH,UAAW,UACnC3F,MAAO6C,GACPmD,SAAU,SAACC,GACTnD,GAAamC,KAAKC,MAAwB,KAAjBe,EAAEC,OAAOlG,OAAe,KACjD0D,IACGf,KACEsD,EAAEC,OAAOlG,QACT+C,KACAE,KACAE,KACAE,KACAE,IAELiB,IACGX,IAAoBM,KACjBxB,KACCsD,EAAEC,OAAOlG,QACT+C,KACAE,KACAE,KACAE,KACAE,KAEPmB,GACEL,KACIR,IAAoBM,KAClBxB,KACCsD,EAAEC,OAAOlG,QACT+C,KACAE,KACAE,KACAE,KACAE,MAETqB,IACIP,KACER,IAAoBM,KAClBxB,KACCsD,EAAEC,OAAOlG,QACT+C,KACAE,KACAE,KACAE,KACAE,OACJc,GACD,MAGN5E,KAAK,SACL0G,IAAI,OACJC,IAAI,eACJC,KAAK,WAGT,oBACEX,MAAO,CAAEhH,MAAO,OAAQoH,MAAO,OAAQC,WAAY,UADrD,SAGG,SAGL,+BACE,oBACEL,MAAO,CACLhH,MAAO,QACPoH,MAAO,OACPC,WAAY,UAJhB,4BASA,oBAAIL,MAAO,CAAEI,MAAO,OAAQC,WAAY,UAAxC,SACE,uBACEL,MAAO,CAAEhH,MAAO,OAAQiH,UAAW,UACnC3F,MAAO+C,GACPiD,SAAU,SAACC,GACTjD,GAAiBiC,KAAKC,MAAwB,KAAjBe,EAAEC,OAAOlG,OAAe,KACrD0D,IACGf,KACEE,KACAoD,EAAEC,OAAOlG,QACTiD,KACAE,KACAE,KACAE,IAELiB,IACGX,IAAoBM,KACjBxB,KACCE,KACAoD,EAAEC,OAAOlG,QACTiD,KACAE,KACAE,KACAE,KAEPmB,GACEL,KACIR,IAAoBM,KAClBxB,KACCE,KACAoD,EAAEC,OAAOlG,QACTiD,KACAE,KACAE,KACAE,MAETqB,IACIP,KACER,IAAoBM,KAClBxB,KACCE,KACAoD,EAAEC,OAAOlG,QACTiD,KACAE,KACAE,KACAE,OACJc,GACD,MAGN5E,KAAK,SACL0G,IAAI,OACJC,IAAI,eACJC,KAAK,WAGT,oBACEX,MAAO,CAAEhH,MAAO,OAAQoH,MAAO,OAAQC,WAAY,UADrD,SAGG,SAGL,+BACE,oBACEL,MAAO,CACLhH,MAAO,QACPoH,MAAO,OACPC,WAAY,UAJhB,uBASA,oBAAIL,MAAO,CAAEI,MAAO,OAAQC,WAAY,UAAxC,SACE,uBACEL,MAAO,CAAEhH,MAAO,OAAQiH,UAAW,UACnC3F,MAAOiD,GACP+C,SAAU,SAACC,GACT/C,GAAY+B,KAAKC,MAAwB,KAAjBe,EAAEC,OAAOlG,OAAe,KAChD0D,IACGf,KACEE,KACAE,KACAkD,EAAEC,OAAOlG,QACTmD,KACAE,KACAE,IAELiB,IACGX,IAAoBM,KACjBxB,KACCE,KACAE,KACAkD,EAAEC,OAAOlG,QACTmD,KACAE,KACAE,KAEPmB,GACEL,KACIR,IAAoBM,KAClBxB,KACCE,KACAE,KACAkD,EAAEC,OAAOlG,QACTmD,KACAE,KACAE,MAETqB,IACIP,KACER,IAAoBM,KAClBxB,KACCE,KACAE,KACAkD,EAAEC,OAAOlG,QACTmD,KACAE,KACAE,OACJc,GACD,MAGN5E,KAAK,SACL0G,IAAI,OACJC,IAAI,eACJC,KAAK,WAGT,oBACEX,MAAO,CAAEhH,MAAO,OAAQoH,MAAO,OAAQC,WAAY,UADrD,SAGG,SAGL,+BACE,oBACEL,MAAO,CACLhH,MAAO,QACPoH,MAAO,OACPC,WAAY,UAJhB,2BASA,oBAAIL,MAAO,CAAEI,MAAO,OAAQC,WAAY,UAAxC,SACE,uBACEL,MAAO,CAAEhH,MAAO,OAAQiH,UAAW,UACnC3F,MAAOmD,GACP6C,SAAU,SAACC,GACT7C,GAAgB6B,KAAKC,MAAwB,KAAjBe,EAAEC,OAAOlG,OAAe,KACpD0D,IACGf,KACEE,KACAE,KACAE,KACAgD,EAAEC,OAAOlG,QACTqD,KACAE,IAELiB,IACGX,IAAoBM,KACjBxB,KACCE,KACAE,KACAE,KACAgD,EAAEC,OAAOlG,QACTqD,KACAE,KAEPmB,GACEL,KACIR,IAAoBM,KAClBxB,KACCE,KACAE,KACAE,KACAgD,EAAEC,OAAOlG,QACTqD,KACAE,MAETqB,IACIP,KACER,IAAoBM,KAClBxB,KACCE,KACAE,KACAE,KACAgD,EAAEC,OAAOlG,QACTqD,KACAE,OACJc,GACD,MAGN5E,KAAK,SACL0G,IAAI,OACJC,IAAI,eACJC,KAAK,WAGT,oBACEX,MAAO,CAAEhH,MAAO,OAAQoH,MAAO,OAAQC,WAAY,UADrD,SAGG,SAGL,+BACE,oBACEL,MAAO,CACLhH,MAAO,QACPoH,MAAO,OACPC,WAAY,UAJhB,8BASA,oBAAIL,MAAO,CAAEI,MAAO,OAAQC,WAAY,UAAxC,SACE,uBACEL,MAAO,CAAEhH,MAAO,OAAQiH,UAAW,UACnC3F,MAAOqD,GACP2C,SAAU,SAACC,GACT3C,GAAmB2B,KAAKC,MAAwB,KAAjBe,EAAEC,OAAOlG,OAAe,KACvD0D,IACGf,KACEE,KACAE,KACAE,KACAE,KACA8C,EAAEC,OAAOlG,QACTuD,IAELiB,IACGX,IAAoBM,KACjBxB,KACCE,KACAE,KACAE,KACAE,KACA8C,EAAEC,OAAOlG,QACTuD,KAEPmB,GACEL,KACIR,IAAoBM,KAClBxB,KACCE,KACAE,KACAE,KACAE,KACA8C,EAAEC,OAAOlG,QACTuD,MAETqB,IACIP,KACER,IAAoBM,KAClBxB,KACCE,KACAE,KACAE,KACAE,KACA8C,EAAEC,OAAOlG,QACTuD,OACJc,GACD,MAGN5E,KAAK,SACL0G,IAAI,OACJC,IAAI,eACJC,KAAK,WAGT,oBACEX,MAAO,CAAEhH,MAAO,OAAQoH,MAAO,OAAQC,WAAY,UADrD,SAGG,SAGL,+BACE,oBACEL,MAAO,CACLhH,MAAO,QACPoH,MAAO,OACPC,WAAY,UAJhB,sBASA,oBAAIL,MAAO,CAAEI,MAAO,OAAQC,WAAY,UAAxC,SACE,uBACEL,MAAO,CAAEhH,MAAO,OAAQiH,UAAW,UACnC3F,MAAOuD,GACPyC,SAAU,SAACC,GACTzC,GAAWyB,KAAKC,MAAwB,KAAjBe,EAAEC,OAAOlG,OAAe,KAC/C0D,IACGf,KACEE,KACAE,KACAE,KACAE,KACAE,KACA4C,EAAEC,OAAOlG,OAEdwE,IACGX,IAAoBM,KACjBxB,KACCE,KACAE,KACAE,KACAE,KACAE,KACA4C,EAAEC,OAAOlG,QAEhB0E,GACEL,KACIR,IAAoBM,KAClBxB,KACCE,KACAE,KACAE,KACAE,KACAE,KACA4C,EAAEC,OAAOlG,SAElB4E,IACIP,KACER,IAAoBM,KAClBxB,KACCE,KACAE,KACAE,KACAE,KACAE,KACA4C,EAAEC,OAAOlG,UACbqE,GACD,MAGN5E,KAAK,SACL0G,IAAI,OACJC,IAAI,eACJC,KAAK,WAGT,oBACEX,MAAO,CAAEhH,MAAO,OAAQoH,MAAO,OAAQC,WAAY,UADrD,SAGG,SAGL,+BACE,oBACEL,MAAO,CACLhH,MAAO,QACPoH,MAAO,OACPC,WAAY,UAJhB,2BASA,oBAAIL,MAAO,CAAEI,MAAO,OAAQC,WAAY,UAAxC,SACE,uBACEL,MAAO,CAAEhH,MAAO,OAAQiH,UAAW,UACnC3F,MAAOiF,KAAKC,MAAqB,IAAfzB,IAAsB,IACxChE,KAAK,SACL0G,IAAI,OACJC,IAAI,eACJC,KAAK,OACLC,UAAQ,MAGZ,oBACEZ,MAAO,CAAEhH,MAAO,OAAQoH,MAAO,OAAQC,WAAY,UADrD,SAGG,SAGL,+BACE,oBACEL,MAAO,CACLhH,MAAO,QACPoH,MAAO,OACPC,WAAY,UAJhB,2BASA,oBAAIL,MAAO,CAAEI,MAAO,OAAQC,WAAY,UAAxC,SACE,uBACEL,MAAO,CAAEhH,MAAO,OAAQiH,UAAW,UACnC3F,MAAO2D,GACPqC,SAAU,SAACC,GACTrC,GAAgBqB,KAAKC,MAAwB,KAAjBe,EAAEC,OAAOlG,OAAe,KACpDkE,KACK+B,EAAEC,OAAOlG,OAAS+B,GAClBkE,EAAEC,OAAOlG,OAASqC,MACjB4D,EAAEC,OAAOlG,OAAS+B,GACpB,KAEJ+B,IACGvB,KAAoB0D,EAAEC,OAAOlG,OAASqC,IAEzC2B,IAAoBiC,EAAEC,OAAOlG,OAAS+B,GACtCuC,IAAY2B,EAAEC,OAAOlG,OAAS+B,GAAWoC,IACzCK,KACIjC,KAAoB0D,EAAEC,OAAOlG,OAASqC,KACrC8B,IAELO,IACGL,KACG9B,KACC0D,EAAEC,OAAOlG,OAASqC,KAClB8B,IAEPS,KACKP,KACC9B,KACC0D,EAAEC,OAAOlG,OAASqC,KAClB8B,KACFE,GACD,MAGN5E,KAAK,SACL0G,IAAI,OACJC,IAAI,eACJC,KAAK,WAGT,oBACEX,MAAO,CAAEhH,MAAO,OAAQoH,MAAO,OAAQC,WAAY,UADrD,SAGG,SAGL,+BACE,oBACEL,MAAO,CACLhH,MAAO,QACPoH,MAAO,OACPC,WAAY,UAJhB,+BASA,oBAAIL,MAAO,CAAEI,MAAO,OAAQC,WAAY,UAAxC,SACE,uBACEL,MAAO,CAAEhH,MAAO,OAAQiH,UAAW,UACnC3F,MAAOiF,KAAKC,MAAyB,IAAnBrB,IAA0B,IAC5CpE,KAAK,SACL0G,IAAI,OACJC,IAAI,eACJC,KAAK,OACLC,UAAQ,MAGZ,oBACEZ,MAAO,CAAEhH,MAAO,OAAQoH,MAAO,OAAQC,WAAY,UADrD,SAGG,SAGL,+BACE,oBACEL,MAAO,CACLhH,MAAO,QACPoH,MAAO,OACPC,WAAY,UAJhB,8BASA,oBAAIL,MAAO,CAAEI,MAAO,OAAQC,WAAY,UAAxC,SACE,uBACEL,MAAO,CAAEhH,MAAO,OAAQiH,UAAW,UACnC3F,MAAOiF,KAAKC,MAAwB,IAAlBnB,IAAyB,IAC3CtE,KAAK,SACL0G,IAAI,OACJC,IAAI,eACJC,KAAK,OACLC,UAAQ,MAGZ,oBACEZ,MAAO,CAAEhH,MAAO,OAAQoH,MAAO,OAAQC,WAAY,UADrD,SAGG,SAGL,+BACE,oBACEL,MAAO,CACLhH,MAAO,QACPoH,MAAO,OACPC,WAAY,UAJhB,4BASA,oBAAIL,MAAO,CAAEI,MAAO,OAAQC,WAAY,UAAxC,SACE,uBACEL,MAAO,CAAEhH,MAAO,OAAQiH,UAAW,UACnC3F,MAAOiF,KAAKC,MAAsB,IAAhBjB,IAAuB,IACzCxE,KAAK,SACL0G,IAAI,OACJC,IAAI,eACJC,KAAK,OACLC,UAAQ,MAGZ,oBACEZ,MAAO,CAAEhH,MAAO,OAAQoH,MAAO,OAAQC,WAAY,UADrD,SAGG,SAGL,+BACE,oBACEL,MAAO,CACLhH,MAAO,QACPoH,MAAO,OACPC,WAAY,UAJhB,qBASA,oBAAIL,MAAO,CAAEI,MAAO,OAAQC,WAAY,UAAxC,SACE,uBACEL,MAAO,CAAEhH,MAAO,OAAQiH,UAAW,UACnC3F,MAAOmE,GACP6B,SAAU,SAACC,GACT7B,GAAUa,KAAKC,MAAwB,KAAjBe,EAAEC,OAAOlG,OAAe,KAC9C0C,IAAcuD,EAAEC,OAAOlG,MAAQuC,IAC/B+B,IAAYP,IAAmBkC,EAAEC,OAAOlG,OACxCwE,IACGX,IAAoBoC,EAAEC,OAAOlG,QAC3ByD,KACAwC,EAAEC,OAAOlG,MAAQuC,IAEtBmC,IACGX,IAAmBkC,EAAEC,OAAOlG,QACzB6D,IAAoBoC,EAAEC,OAAOlG,QAASyD,KAE5CmB,KACKb,IAAmBkC,EAAEC,OAAOlG,QAC3B6D,IAAoBoC,EAAEC,OAAOlG,QAASyD,OACtCM,IAAmBkC,EAAEC,OAAOlG,OAC9B,MAGNP,KAAK,SACL0G,IAAI,OACJC,IAAI,eACJC,KAAK,WAGT,oBACEX,MAAO,CAAEhH,MAAO,OAAQoH,MAAO,OAAQC,WAAY,UADrD,SAGG,SAGL,+BACE,oBACEL,MAAO,CACLhH,MAAO,QACPoH,MAAO,OACPC,WAAY,UAJhB,sBASA,oBAAIL,MAAO,CAAEI,MAAO,OAAQC,WAAY,UAAxC,SACE,uBACEL,MAAO,CAAEhH,MAAO,OAAQiH,UAAW,UACnC3F,MAAOiF,KAAKC,MAAgB,IAAVb,IAAiB,IACnC5E,KAAK,SACL0G,IAAI,OACJC,IAAI,eACJC,KAAK,OACLC,UAAQ,MAGZ,oBACEZ,MAAO,CAAEhH,MAAO,OAAQoH,MAAO,OAAQC,WAAY,UADrD,SAGG,SAGL,+BACE,oBACEL,MAAO,CACLhH,MAAO,QACPoH,MAAO,OACPC,WAAY,UAJhB,uBASA,oBAAIL,MAAO,CAAEI,MAAO,OAAQC,WAAY,UAAxC,SACE,uBACEL,MAAO,CAAEhH,MAAO,OAAQiH,UAAW,UACnC3F,MAAOiF,KAAKC,MAAiB,IAAXX,IAAkB,IACpC9E,KAAK,SACL0G,IAAI,OACJC,IAAI,eACJC,KAAK,OACLC,UAAQ,MAGZ,oBACEZ,MAAO,CAAEhH,MAAO,OAAQoH,MAAO,OAAQC,WAAY,UADrD,SAGG,SAGL,+BACE,oBACEL,MAAO,CACLhH,MAAO,QACPoH,MAAO,OACPC,WAAY,UAJhB,0BASA,oBAAIL,MAAO,CAAEI,MAAO,OAAQC,WAAY,UAAxC,SACE,uBACEL,MAAO,CAAEhH,MAAO,OAAQiH,UAAW,UACnC3F,MAAOiF,KAAKC,MAAoB,IAAdT,IAAqB,IACvChF,KAAK,SACL0G,IAAI,OACJC,IAAI,eACJC,KAAK,OACLC,UAAQ,MAGZ,oBACEZ,MAAO,CAAEhH,MAAO,OAAQoH,MAAO,OAAQC,WAAY,UADrD,SAGG,SAGL,+BACE,oBACEL,MAAO,CACLhH,MAAO,QACPoH,MAAO,OACPC,WAAY,UAJhB,0BASA,oBAAIL,MAAO,CAAEI,MAAO,OAAQC,WAAY,UAAxC,SACE,uBACEL,MAAO,CAAEhH,MAAO,OAAQiH,UAAW,UACnC3F,MAAOiF,KAAKC,MAAoB,IAAdP,IAAqB,IACvClF,KAAK,SACL0G,IAAI,OACJC,IAAI,eACJC,KAAK,OACLC,UAAQ,MAGZ,oBACEZ,MAAO,CAAEhH,MAAO,OAAQoH,MAAO,OAAQC,WAAY,UADrD,SAGG,cAKT,uBACA,uBACA,uBACA,uBACA,uBACA,qBAAKL,MAAO,CAAEC,UAAW,UAAzB,SACE,sFAEF,8BACE,cAACvH,EAAD,CAAOE,KAAMA,OAEf,uBACA,uBACA,uBACA,uBACA,uBACA,qBAAKoH,MAAO,CAAEC,UAAW,UAAzB,SACE,6DAEF,8BACE,cAAClF,EAAD,CAAQnC,KAAMkH,OAEhB,uBACA,uBACA,uBACA,uBACA,uBACA,yNAEF,8BACE,6BAAKP,KAAKC,MAAMrD,EAAU8B,GAAe,KAAO,IAAM,QAExD,uBACA,uBACA,uBACA,uBACA,2B,OCj/DN4C,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.98e7dafd.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  LineChart,\r\n  CartesianGrid,\r\n  XAxis,\r\n  YAxis,\r\n  Legend,\r\n  Line,\r\n  Label,\r\n  Tooltip,\r\n} from \"recharts\";\r\n\r\nexport default function Chart(props) {\r\n  let data = props.data;\r\n\r\n  return (\r\n    <div className={\"chartdiv\" + (props.isShown ? \"show\" : \"\")}>\r\n      <span className=\"chart\">\r\n        <LineChart width={400} height={350} data={data}>\r\n          <Tooltip\r\n            cursor={{\r\n              stroke: \"#444444\",\r\n              strokeWidth: 2,\r\n            }}\r\n          />\r\n          <CartesianGrid horizontal={true} vertical={true} />\r\n          <XAxis dataKey=\"orderNo\" padding={{ right: 20, left: 20 }} />\r\n          <YAxis\r\n            type=\"number\"\r\n            domain={[0, 100]}\r\n            padding={{ bottom: 15, top: 20 }}\r\n            height={50}\r\n            minTickGap={1}\r\n            allowDecimals={false}\r\n          >\r\n            <Label value=\"%\" angle={-90} position=\"insideBottom\" offset={80} />\r\n          </YAxis>\r\n          <Legend verticalAlign=\"bottom\" height={26} />\r\n          <Line\r\n            name=\"שולי רווח בשיקלול הוצאות חד פעמיות\"\r\n            type=\"linear\"\r\n            dataKey=\"profitMargin\"\r\n            stroke=\"#5e2b01\"\r\n            dot={{ stroke: \"#5e2b01\", strokeWidth: 2 }}\r\n            strokeWidth={2}\r\n          />\r\n          <Line\r\n            name=\"שולי רווח אסימפטוטיים (פר מוצר)\"\r\n            type=\"linear\"\r\n            dataKey=\"Asimptot\"\r\n            stroke=\"#0000ff\"\r\n            dot={false}\r\n          />\r\n          <Line\r\n            strokeWidth={2}\r\n            name=\"קו 50%\"\r\n            type=\"linear\"\r\n            dataKey=\"l50\"\r\n            stroke=\"#00ff00\"\r\n            dot={false}\r\n          />\r\n          <Line\r\n            strokeWidth={2}\r\n            name=\"קו 30%\"\r\n            type=\"linear\"\r\n            dataKey=\"l30\"\r\n            stroke=\"#afaf1a\"\r\n            dot={false}\r\n          />\r\n          <Line\r\n            strokeWidth={2}\r\n            name=\"קו 15%\"\r\n            type=\"linear\"\r\n            dataKey=\"l15\"\r\n            stroke=\"#ffae00\"\r\n            dot={false}\r\n          />\r\n          <Line\r\n            strokeWidth={2}\r\n            name=\"קו הפסד\"\r\n            type=\"linear\"\r\n            dataKey=\"l0\"\r\n            stroke=\"#ff0000\"\r\n            dot={false}\r\n          />\r\n        </LineChart>\r\n      </span>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  LineChart,\r\n  CartesianGrid,\r\n  XAxis,\r\n  YAxis,\r\n  Legend,\r\n  Line,\r\n  Label,\r\n  Tooltip,\r\n} from \"recharts\";\r\n\r\nexport default function ChartP(props) {\r\n  let data = props.data;\r\n\r\n  return (\r\n    <div className={\"chartdiv\" + (props.isShown ? \"show\" : \"\")}>\r\n      <span className=\"chart\">\r\n        <LineChart width={400} height={350} data={data}>\r\n          <Tooltip\r\n            cursor={{\r\n              stroke: \"#444444\",\r\n              strokeWidth: 2,\r\n            }}\r\n            formatter={(value, name, props) => [\r\n              name === \"קו הפסד\" ? \"\" : value,\r\n              name === \"קו הפסד\" ? \"\" : name,\r\n            ]}\r\n          />\r\n          <CartesianGrid horizontal={true} vertical={true} />\r\n          <XAxis dataKey=\"orderNo\" padding={{ right: 20, left: 20 }} />\r\n          <YAxis\r\n            type=\"number\"\r\n            padding={{ bottom: 15, top: 20 }}\r\n            height={50}\r\n            minTickGap={1}\r\n            allowDecimals={false}\r\n          >\r\n            <Label value=\"$\" angle={-90} position=\"insideBottom\" offset={80} />\r\n          </YAxis>\r\n          <Legend verticalAlign=\"bottom\" height={26} />\r\n          <Line\r\n            name=\"רווח\"\r\n            type=\"linear\"\r\n            dataKey=\"profit\"\r\n            stroke=\"#5e2b01\"\r\n            dot={{ stroke: \"#5e2b01\", strokeWidth: 2 }}\r\n            strokeWidth={2}\r\n          />\r\n\r\n          <Line\r\n            strokeWidth={2}\r\n            name=\"קו הפסד\"\r\n            type=\"linear\"\r\n            dataKey=\"l0\"\r\n            stroke=\"#ff0000\"\r\n            dot={false}\r\n          />\r\n        </LineChart>\r\n      </span>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport Chart from \"./Chart\";\r\nimport ChartP from \"./ChartP\";\r\n\r\nfunction App() {\r\n  const [Manufacturing, setManufacturing] = useState();\r\n  const [Inspection, setInspection] = useState();\r\n  const [Packaging, setPackaging] = useState();\r\n  const [Production, setProduction] = useState();\r\n  const [Freights, setFreights] = useState();\r\n  const [Landingcost, setLandingcost] = useState();\r\n  const [Insert, setInsert] = useState();\r\n  const [PPC, setPPC] = useState();\r\n  const [Listing, setListing] = useState();\r\n  const [Revenue, setRevenue] = useState();\r\n  const [RefFee, setRefFee] = useState();\r\n  const [FBAFee, setFBAFee] = useState();\r\n  const [TotalOutPerUnit, setTotalOutPerUnit] = useState();\r\n  const [OneOrderTimeSAAS, setOneOrderTimeSAAS] = useState();\r\n  const [TotalSAAS, setTotalSAAS] = useState();\r\n  const [LLC, setLLC] = useState();\r\n  const [Trademark, setTrademark] = useState();\r\n  const [Photographing, setPhotographing] = useState();\r\n  const [Unboxing, setUnboxing] = useState();\r\n  const [InsertDesign, setInsertDesign] = useState();\r\n  const [PackagingDesign, setPackagingDesign] = useState();\r\n  const [Samples, setSamples] = useState();\r\n  const [TotalOneTime, setTotalOneTime] = useState();\r\n  const [UnitsInOrder, setUnitsInOrder] = useState();\r\n  const [TotalOutPerOrder, setTotalOutPerOrder] = useState();\r\n  const [TotalInPerOrder, setTotalInPerOrder] = useState();\r\n  const [MarginPerUnit, setMarginPerUnit] = useState();\r\n  const [Orders, setOrders] = useState();\r\n  const [TotalIn, setTotalIn] = useState();\r\n  const [TotalOut, setTotalOut] = useState();\r\n  const [TotalProfit, setTotalProfit] = useState();\r\n  const [TotalMargin, setTotalMargin] = useState();\r\n\r\n  let data = [];\r\n  for (let i = 1; i < 10; i++) {\r\n    data.push({\r\n      orderNo: i,\r\n      profitMargin: Math.round(\r\n        ((+TotalInPerOrder * +i - (+TotalOutPerOrder * +i + +TotalOneTime)) /\r\n          (+TotalInPerOrder * +i)) *\r\n          100\r\n      ),\r\n      Asimptot: MarginPerUnit,\r\n      l50: 50,\r\n      l30: 30,\r\n      l15: 15,\r\n      l0: 0,\r\n    });\r\n  }\r\n\r\n  let datap = [];\r\n  for (let i = 1; i < 10; i++) {\r\n    datap.push({\r\n      orderNo: i,\r\n      profit: Math.round(\r\n        +TotalInPerOrder * +i - (+TotalOutPerOrder * +i + +TotalOneTime)\r\n      ),\r\n      l0: 0,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div style={{ padding: \"50px\" }}>\r\n        <h1 style={{ textAlign: \"center\" }}>PF PC(Profitability Calclator)</h1>\r\n        <table style={{ marginLeft: \"auto\", marginRight: \"auto\" }}>\r\n          <tbody style={{ textAlign: \"center\" }}>\r\n            <tr>\r\n              <td\r\n                style={{\r\n                  width: \"154px\",\r\n                  color: \"blue\",\r\n                  fontWeight: \"bolder\",\r\n                }}\r\n              >\r\n                Manufacturing:\r\n              </td>\r\n              <td style={{ color: \"blue\", fontWeight: \"bolder\" }}>\r\n                <input\r\n                  style={{ width: \"80px\", textAlign: \"center\" }}\r\n                  value={Manufacturing}\r\n                  onChange={(e) => {\r\n                    setManufacturing(Math.round(+e.target.value * 100) / 100);\r\n                    setProduction(+e.target.value + +Inspection + +Packaging);\r\n                    setLandingcost(\r\n                      +e.target.value + +Inspection + +Packaging + +Freights\r\n                    );\r\n                    setListing(\r\n                      +e.target.value +\r\n                        +Inspection +\r\n                        +Packaging +\r\n                        +Freights +\r\n                        +Insert +\r\n                        +PPC\r\n                    );\r\n                    setTotalOutPerUnit(\r\n                      +e.target.value +\r\n                        +Inspection +\r\n                        +Packaging +\r\n                        +Freights +\r\n                        +Insert +\r\n                        +PPC +\r\n                        +RefFee +\r\n                        +FBAFee\r\n                    );\r\n                    setMarginPerUnit(\r\n                      ((+UnitsInOrder * +Revenue -\r\n                        +UnitsInOrder *\r\n                          (+e.target.value +\r\n                            +Inspection +\r\n                            +Packaging +\r\n                            +Freights +\r\n                            +Insert +\r\n                            +PPC +\r\n                            +RefFee +\r\n                            +FBAFee)) /\r\n                        (+UnitsInOrder * +Revenue)) *\r\n                        100\r\n                    );\r\n                    setTotalOutPerOrder(\r\n                      +OneOrderTimeSAAS +\r\n                        +UnitsInOrder *\r\n                          (+e.target.value +\r\n                            +Inspection +\r\n                            +Packaging +\r\n                            +Freights +\r\n                            +Insert +\r\n                            +PPC +\r\n                            +RefFee +\r\n                            +FBAFee)\r\n                    );\r\n                    setTotalOut(\r\n                      +Orders *\r\n                        (+OneOrderTimeSAAS +\r\n                          +UnitsInOrder *\r\n                            (+e.target.value +\r\n                              +Inspection +\r\n                              +Packaging +\r\n                              +Freights +\r\n                              +Insert +\r\n                              +PPC +\r\n                              +RefFee +\r\n                              +FBAFee))\r\n                    );\r\n                    setTotalProfit(\r\n                      +TotalIn -\r\n                        +Orders *\r\n                          (+OneOrderTimeSAAS +\r\n                            +UnitsInOrder *\r\n                              (+e.target.value +\r\n                                +Inspection +\r\n                                +Packaging +\r\n                                +Freights +\r\n                                +Insert +\r\n                                +PPC +\r\n                                +RefFee +\r\n                                +FBAFee))\r\n                    );\r\n                    setTotalMargin(\r\n                      ((+TotalIn -\r\n                        +Orders *\r\n                          (+OneOrderTimeSAAS +\r\n                            +UnitsInOrder *\r\n                              (+e.target.value +\r\n                                +Inspection +\r\n                                +Packaging +\r\n                                +Freights +\r\n                                +Insert +\r\n                                +PPC +\r\n                                +RefFee +\r\n                                +FBAFee))) /\r\n                        +TotalIn) *\r\n                        100\r\n                    );\r\n                  }}\r\n                  type=\"number\"\r\n                  min=\"0.00\"\r\n                  max=\"100000000.00\"\r\n                  step=\"0.01\"\r\n                />\r\n              </td>\r\n              <td\r\n                style={{ width: \"30px\", color: \"blue\", fontWeight: \"bolder\" }}\r\n              >\r\n                {\"$\"}\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td\r\n                style={{\r\n                  width: \"154px\",\r\n                  color: \"blue\",\r\n                  fontWeight: \"bolder\",\r\n                }}\r\n              >\r\n                Inspection:\r\n              </td>\r\n              <td style={{ color: \"blue\", fontWeight: \"bolder\" }}>\r\n                <input\r\n                  style={{ width: \"80px\", textAlign: \"center\" }}\r\n                  value={Inspection}\r\n                  onChange={(e) => {\r\n                    setInspection(Math.round(+e.target.value * 100) / 100);\r\n                    setProduction(\r\n                      +Manufacturing + +e.target.value + +Packaging\r\n                    );\r\n                    setLandingcost(\r\n                      +Manufacturing + +e.target.value + +Packaging + +Freights\r\n                    );\r\n                    setListing(\r\n                      +Manufacturing +\r\n                        +e.target.value +\r\n                        +Packaging +\r\n                        +Freights +\r\n                        +Insert +\r\n                        +PPC\r\n                    );\r\n                    setTotalOutPerUnit(\r\n                      +Manufacturing +\r\n                        +e.target.value +\r\n                        +Packaging +\r\n                        +Freights +\r\n                        +Insert +\r\n                        +PPC +\r\n                        +RefFee +\r\n                        +FBAFee\r\n                    );\r\n                    setMarginPerUnit(\r\n                      ((+UnitsInOrder * +Revenue -\r\n                        +UnitsInOrder *\r\n                          (+Manufacturing +\r\n                            +e.target.value +\r\n                            +Packaging +\r\n                            +Freights +\r\n                            +Insert +\r\n                            +PPC +\r\n                            +RefFee +\r\n                            +FBAFee)) /\r\n                        (+UnitsInOrder * +Revenue)) *\r\n                        100\r\n                    );\r\n                    setTotalOutPerOrder(\r\n                      +OneOrderTimeSAAS +\r\n                        +UnitsInOrder *\r\n                          (+Manufacturing +\r\n                            +e.target.value +\r\n                            +Packaging +\r\n                            +Freights +\r\n                            +Insert +\r\n                            +PPC +\r\n                            +RefFee +\r\n                            +FBAFee)\r\n                    );\r\n                    setTotalOut(\r\n                      +Orders *\r\n                        (+OneOrderTimeSAAS +\r\n                          +UnitsInOrder *\r\n                            (+Manufacturing +\r\n                              +e.target.value +\r\n                              +Packaging +\r\n                              +Freights +\r\n                              +Insert +\r\n                              +PPC +\r\n                              +RefFee +\r\n                              +FBAFee))\r\n                    );\r\n                    setTotalProfit(\r\n                      TotalIn -\r\n                        +Orders *\r\n                          (+OneOrderTimeSAAS +\r\n                            +UnitsInOrder *\r\n                              (+Manufacturing +\r\n                                +e.target.value +\r\n                                +Packaging +\r\n                                +Freights +\r\n                                +Insert +\r\n                                +PPC +\r\n                                +RefFee +\r\n                                +FBAFee))\r\n                    );\r\n                    setTotalMargin(\r\n                      ((TotalIn -\r\n                        +Orders *\r\n                          (+OneOrderTimeSAAS +\r\n                            +UnitsInOrder *\r\n                              (+Manufacturing +\r\n                                +e.target.value +\r\n                                +Packaging +\r\n                                +Freights +\r\n                                +Insert +\r\n                                +PPC +\r\n                                +RefFee +\r\n                                +FBAFee))) /\r\n                        +TotalIn) *\r\n                        100\r\n                    );\r\n                  }}\r\n                  type=\"number\"\r\n                  min=\"0.00\"\r\n                  max=\"100000000.00\"\r\n                  step=\"0.01\"\r\n                />\r\n              </td>\r\n              <td\r\n                style={{ width: \"30px\", color: \"blue\", fontWeight: \"bolder\" }}\r\n              >\r\n                {\"$\"}\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td\r\n                style={{\r\n                  width: \"154px\",\r\n                  color: \"blue\",\r\n                  fontWeight: \"bolder\",\r\n                }}\r\n              >\r\n                Packaging:\r\n              </td>\r\n              <td style={{ color: \"blue\", fontWeight: \"bolder\" }}>\r\n                <input\r\n                  style={{ width: \"80px\", textAlign: \"center\" }}\r\n                  value={Packaging}\r\n                  onChange={(e) => {\r\n                    setPackaging(Math.round(+e.target.value * 100) / 100);\r\n                    setProduction(\r\n                      +Manufacturing + +Inspection + +e.target.value\r\n                    );\r\n                    setLandingcost(\r\n                      +Manufacturing + +Inspection + +e.target.value + +Freights\r\n                    );\r\n                    setListing(\r\n                      +Manufacturing +\r\n                        +Inspection +\r\n                        +e.target.value +\r\n                        +Freights +\r\n                        +Insert +\r\n                        +PPC\r\n                    );\r\n                    setTotalOutPerUnit(\r\n                      +Manufacturing +\r\n                        +Inspection +\r\n                        +e.target.value +\r\n                        +Freights +\r\n                        +Insert +\r\n                        +PPC +\r\n                        +RefFee +\r\n                        +FBAFee\r\n                    );\r\n                    setMarginPerUnit(\r\n                      ((+UnitsInOrder * +Revenue -\r\n                        +UnitsInOrder *\r\n                          (+Manufacturing +\r\n                            +Inspection +\r\n                            +e.target.value +\r\n                            +Freights +\r\n                            +Insert +\r\n                            +PPC +\r\n                            +RefFee +\r\n                            +FBAFee)) /\r\n                        (+UnitsInOrder * +Revenue)) *\r\n                        100\r\n                    );\r\n                    setTotalOutPerOrder(\r\n                      +OneOrderTimeSAAS +\r\n                        +UnitsInOrder *\r\n                          (+Manufacturing +\r\n                            +Inspection +\r\n                            +e.target.value +\r\n                            +Freights +\r\n                            +Insert +\r\n                            +PPC +\r\n                            +RefFee +\r\n                            +FBAFee)\r\n                    );\r\n                    setTotalOut(\r\n                      +Orders *\r\n                        (+OneOrderTimeSAAS +\r\n                          +UnitsInOrder *\r\n                            (+Manufacturing +\r\n                              +Inspection +\r\n                              +e.target.value +\r\n                              +Freights +\r\n                              +Insert +\r\n                              +PPC +\r\n                              +RefFee +\r\n                              +FBAFee))\r\n                    );\r\n                    setTotalProfit(\r\n                      TotalIn -\r\n                        +Orders *\r\n                          (+OneOrderTimeSAAS +\r\n                            +UnitsInOrder *\r\n                              (+Manufacturing +\r\n                                +Inspection +\r\n                                +e.target.value +\r\n                                +Freights +\r\n                                +Insert +\r\n                                +PPC +\r\n                                +RefFee +\r\n                                +FBAFee))\r\n                    );\r\n                    setTotalMargin(\r\n                      ((TotalIn -\r\n                        +Orders *\r\n                          (+OneOrderTimeSAAS +\r\n                            +UnitsInOrder *\r\n                              (+Manufacturing +\r\n                                +Inspection +\r\n                                +e.target.value +\r\n                                +Freights +\r\n                                +Insert +\r\n                                +PPC +\r\n                                +RefFee +\r\n                                +FBAFee))) /\r\n                        +TotalIn) *\r\n                        100\r\n                    );\r\n                  }}\r\n                  type=\"number\"\r\n                  min=\"0.00\"\r\n                  max=\"100000000.00\"\r\n                  step=\"0.01\"\r\n                />\r\n              </td>\r\n              <td\r\n                style={{ width: \"30px\", color: \"blue\", fontWeight: \"bolder\" }}\r\n              >\r\n                {\"$\"}\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td\r\n                style={{\r\n                  width: \"154px\",\r\n                  color: \"blue\",\r\n                  fontWeight: \"bolder\",\r\n                }}\r\n              >\r\n                Production:\r\n              </td>\r\n              <td style={{ color: \"blue\", fontWeight: \"bolder\" }}>\r\n                <input\r\n                  style={{ width: \"80px\", textAlign: \"center\" }}\r\n                  value={Math.round(Production * 100) / 100}\r\n                  type=\"number\"\r\n                  min=\"0.00\"\r\n                  max=\"100000000.00\"\r\n                  step=\"0.01\"\r\n                  disabled\r\n                />\r\n              </td>\r\n              <td\r\n                style={{ width: \"30px\", color: \"blue\", fontWeight: \"bolder\" }}\r\n              >\r\n                {\"$\"}\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td\r\n                style={{\r\n                  width: \"154px\",\r\n                  color: \"blue\",\r\n                  fontWeight: \"bolder\",\r\n                }}\r\n              >\r\n                Freights:{\" \"}\r\n              </td>\r\n              <td style={{ color: \"blue\", fontWeight: \"bolder\" }}>\r\n                <input\r\n                  style={{ width: \"80px\", textAlign: \"center\" }}\r\n                  value={Freights}\r\n                  onChange={(e) => {\r\n                    setFreights(Math.round(+e.target.value * 100) / 100);\r\n                    setLandingcost(+Production + +e.target.value);\r\n                    setListing(\r\n                      +Manufacturing +\r\n                        +Inspection +\r\n                        +Packaging +\r\n                        +e.target.value +\r\n                        +Insert +\r\n                        +PPC\r\n                    );\r\n                    setTotalOutPerUnit(\r\n                      +Manufacturing +\r\n                        +Inspection +\r\n                        +Packaging +\r\n                        +e.target.value +\r\n                        +Insert +\r\n                        +PPC +\r\n                        +RefFee +\r\n                        +FBAFee\r\n                    );\r\n                    setMarginPerUnit(\r\n                      ((+UnitsInOrder * +Revenue -\r\n                        +UnitsInOrder *\r\n                          (+Manufacturing +\r\n                            +Inspection +\r\n                            +Packaging +\r\n                            +e.target.value +\r\n                            +Insert +\r\n                            +PPC +\r\n                            +RefFee +\r\n                            +FBAFee)) /\r\n                        (+UnitsInOrder * +Revenue)) *\r\n                        100\r\n                    );\r\n                    setTotalOutPerOrder(\r\n                      +OneOrderTimeSAAS +\r\n                        +UnitsInOrder *\r\n                          (+Manufacturing +\r\n                            +Inspection +\r\n                            +Packaging +\r\n                            +e.target.value +\r\n                            +Insert +\r\n                            +PPC +\r\n                            +RefFee +\r\n                            +FBAFee)\r\n                    );\r\n                    setTotalOut(\r\n                      +Orders *\r\n                        (+OneOrderTimeSAAS +\r\n                          +UnitsInOrder *\r\n                            (+Manufacturing +\r\n                              +Inspection +\r\n                              +Packaging +\r\n                              +e.target.value +\r\n                              +Insert +\r\n                              +PPC +\r\n                              +RefFee +\r\n                              +FBAFee))\r\n                    );\r\n                    setTotalProfit(\r\n                      TotalIn -\r\n                        +Orders *\r\n                          (+OneOrderTimeSAAS +\r\n                            +UnitsInOrder *\r\n                              (+Manufacturing +\r\n                                +Inspection +\r\n                                +Packaging +\r\n                                +e.target.value +\r\n                                +Insert +\r\n                                +PPC +\r\n                                +RefFee +\r\n                                +FBAFee))\r\n                    );\r\n                    setTotalMargin(\r\n                      ((TotalIn -\r\n                        +Orders *\r\n                          (+OneOrderTimeSAAS +\r\n                            +UnitsInOrder *\r\n                              (+Manufacturing +\r\n                                +Inspection +\r\n                                +Packaging +\r\n                                +e.target.value +\r\n                                +Insert +\r\n                                +PPC +\r\n                                +RefFee +\r\n                                +FBAFee))) /\r\n                        +TotalIn) *\r\n                        100\r\n                    );\r\n                  }}\r\n                  type=\"number\"\r\n                  min=\"0.00\"\r\n                  max=\"100000000.00\"\r\n                  step=\"0.01\"\r\n                />\r\n              </td>\r\n              <td\r\n                style={{ width: \"30px\", color: \"blue\", fontWeight: \"bolder\" }}\r\n              >\r\n                {\"$\"}\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td\r\n                style={{\r\n                  width: \"154px\",\r\n                  color: \"blue\",\r\n                  fontWeight: \"bolder\",\r\n                }}\r\n              >\r\n                Landingcost:\r\n              </td>\r\n              <td style={{ color: \"blue\", fontWeight: \"bolder\" }}>\r\n                <input\r\n                  style={{ width: \"80px\", textAlign: \"center\" }}\r\n                  value={Math.round(Landingcost * 100) / 100}\r\n                  type=\"number\"\r\n                  min=\"0.00\"\r\n                  max=\"100000000.00\"\r\n                  step=\"0.01\"\r\n                  disabled\r\n                />\r\n              </td>\r\n              <td\r\n                style={{ width: \"30px\", color: \"blue\", fontWeight: \"bolder\" }}\r\n              >\r\n                {\"$\"}\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td\r\n                style={{\r\n                  width: \"154px\",\r\n                  color: \"blue\",\r\n                  fontWeight: \"bolder\",\r\n                }}\r\n              >\r\n                Insert:{\" \"}\r\n              </td>\r\n              <td style={{ color: \"blue\", fontWeight: \"bolder\" }}>\r\n                <input\r\n                  style={{ width: \"80px\", textAlign: \"center\" }}\r\n                  value={Insert}\r\n                  onChange={(e) => {\r\n                    setInsert(Math.round(+e.target.value * 100) / 100);\r\n                    setListing(\r\n                      +Manufacturing +\r\n                        +Inspection +\r\n                        +Packaging +\r\n                        +Freights +\r\n                        +e.target.value +\r\n                        +PPC\r\n                    );\r\n                    setTotalOutPerUnit(\r\n                      +Manufacturing +\r\n                        +Inspection +\r\n                        +Packaging +\r\n                        +Freights +\r\n                        +e.target.value +\r\n                        +PPC +\r\n                        +RefFee +\r\n                        +FBAFee\r\n                    );\r\n                    setMarginPerUnit(\r\n                      ((+UnitsInOrder * +Revenue -\r\n                        +UnitsInOrder *\r\n                          (+Manufacturing +\r\n                            +Inspection +\r\n                            +Packaging +\r\n                            +Freights +\r\n                            +e.target.value +\r\n                            +PPC +\r\n                            +RefFee +\r\n                            +FBAFee)) /\r\n                        (+UnitsInOrder * +Revenue)) *\r\n                        100\r\n                    );\r\n                    setTotalOutPerOrder(\r\n                      +OneOrderTimeSAAS +\r\n                        +UnitsInOrder *\r\n                          (+Manufacturing +\r\n                            +Inspection +\r\n                            +Packaging +\r\n                            +Freights +\r\n                            +e.target.value +\r\n                            +PPC +\r\n                            +RefFee +\r\n                            +FBAFee)\r\n                    );\r\n                    setTotalOut(\r\n                      +Orders *\r\n                        (+OneOrderTimeSAAS +\r\n                          +UnitsInOrder *\r\n                            (+Manufacturing +\r\n                              +Inspection +\r\n                              +Packaging +\r\n                              +Freights +\r\n                              +e.target.value +\r\n                              +PPC +\r\n                              +RefFee +\r\n                              +FBAFee))\r\n                    );\r\n                    setTotalProfit(\r\n                      TotalIn -\r\n                        +Orders *\r\n                          (+OneOrderTimeSAAS +\r\n                            +UnitsInOrder *\r\n                              (+Manufacturing +\r\n                                +Inspection +\r\n                                +Packaging +\r\n                                +Freights +\r\n                                +e.target.value +\r\n                                +PPC +\r\n                                +RefFee +\r\n                                +FBAFee))\r\n                    );\r\n                    setTotalMargin(\r\n                      ((TotalIn -\r\n                        +Orders *\r\n                          (+OneOrderTimeSAAS +\r\n                            +UnitsInOrder *\r\n                              (+Manufacturing +\r\n                                +Inspection +\r\n                                +Packaging +\r\n                                +Freights +\r\n                                +e.target.value +\r\n                                +PPC +\r\n                                +RefFee +\r\n                                +FBAFee))) /\r\n                        +TotalIn) *\r\n                        100\r\n                    );\r\n                  }}\r\n                  type=\"number\"\r\n                  min=\"0.00\"\r\n                  max=\"100000000.00\"\r\n                  step=\"0.01\"\r\n                />\r\n              </td>\r\n              <td\r\n                style={{ width: \"30px\", color: \"blue\", fontWeight: \"bolder\" }}\r\n              >\r\n                {\"$\"}\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td\r\n                style={{\r\n                  width: \"154px\",\r\n                  color: \"blue\",\r\n                  fontWeight: \"bolder\",\r\n                }}\r\n              >\r\n                PPC:{\" \"}\r\n              </td>\r\n              <td style={{ color: \"blue\", fontWeight: \"bolder\" }}>\r\n                <input\r\n                  style={{ width: \"80px\", textAlign: \"center\" }}\r\n                  value={PPC}\r\n                  onChange={(e) => {\r\n                    setPPC(Math.round(+e.target.value * 100) / 100);\r\n                    setListing(\r\n                      +Manufacturing +\r\n                        +Inspection +\r\n                        +Packaging +\r\n                        +Freights +\r\n                        +Insert +\r\n                        +e.target.value\r\n                    );\r\n                    setTotalOutPerUnit(\r\n                      +Manufacturing +\r\n                        +Inspection +\r\n                        +Packaging +\r\n                        +Freights +\r\n                        +Insert +\r\n                        +e.target.value +\r\n                        +RefFee +\r\n                        +FBAFee\r\n                    );\r\n                    setMarginPerUnit(\r\n                      ((+UnitsInOrder * +Revenue -\r\n                        +UnitsInOrder *\r\n                          (+Manufacturing +\r\n                            +Inspection +\r\n                            +Packaging +\r\n                            +Freights +\r\n                            +Insert +\r\n                            +e.target.value +\r\n                            +RefFee +\r\n                            +FBAFee)) /\r\n                        (+UnitsInOrder * +Revenue)) *\r\n                        100\r\n                    );\r\n                    setTotalOutPerOrder(\r\n                      +OneOrderTimeSAAS +\r\n                        +UnitsInOrder *\r\n                          (+Manufacturing +\r\n                            +Inspection +\r\n                            +Packaging +\r\n                            +Freights +\r\n                            +Insert +\r\n                            +PPC +\r\n                            +RefFee +\r\n                            +FBAFee)\r\n                    );\r\n                    setTotalOut(\r\n                      +Orders *\r\n                        (+OneOrderTimeSAAS +\r\n                          +UnitsInOrder *\r\n                            (+Manufacturing +\r\n                              +Inspection +\r\n                              +Packaging +\r\n                              +Freights +\r\n                              +Insert +\r\n                              +e.target.value +\r\n                              +RefFee +\r\n                              +FBAFee))\r\n                    );\r\n                    setTotalProfit(\r\n                      TotalIn -\r\n                        +Orders *\r\n                          (+OneOrderTimeSAAS +\r\n                            +UnitsInOrder *\r\n                              (+Manufacturing +\r\n                                +Inspection +\r\n                                +Packaging +\r\n                                +Freights +\r\n                                +Insert +\r\n                                +e.target.value +\r\n                                +RefFee +\r\n                                +FBAFee))\r\n                    );\r\n                    setTotalMargin(\r\n                      ((TotalIn -\r\n                        +Orders *\r\n                          (+OneOrderTimeSAAS +\r\n                            +UnitsInOrder *\r\n                              (+Manufacturing +\r\n                                +Inspection +\r\n                                +Packaging +\r\n                                +Freights +\r\n                                +Insert +\r\n                                +e.target.value +\r\n                                +RefFee +\r\n                                +FBAFee))) /\r\n                        +TotalIn) *\r\n                        100\r\n                    );\r\n                  }}\r\n                  type=\"number\"\r\n                  min=\"0.00\"\r\n                  max=\"100000000.00\"\r\n                  step=\"0.01\"\r\n                />\r\n              </td>\r\n              <td\r\n                style={{ width: \"30px\", color: \"blue\", fontWeight: \"bolder\" }}\r\n              >\r\n                {\"$\"}\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td\r\n                style={{\r\n                  width: \"154px\",\r\n                  color: \"blue\",\r\n                  fontWeight: \"bolder\",\r\n                }}\r\n              >\r\n                Listing:{\" \"}\r\n              </td>\r\n              <td style={{ color: \"blue\", fontWeight: \"bolder\" }}>\r\n                <input\r\n                  style={{ width: \"80px\", textAlign: \"center\" }}\r\n                  value={Math.round(Listing * 100) / 100}\r\n                  type=\"number\"\r\n                  min=\"0.00\"\r\n                  max=\"100000000.00\"\r\n                  step=\"0.01\"\r\n                  disabled\r\n                />\r\n              </td>\r\n              <td\r\n                style={{ width: \"30px\", color: \"blue\", fontWeight: \"bolder\" }}\r\n              >\r\n                {\"$\"}\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td\r\n                style={{\r\n                  width: \"154px\",\r\n                  color: \"blue\",\r\n                  fontWeight: \"bolder\",\r\n                }}\r\n              >\r\n                Revenue:\r\n              </td>\r\n              <td style={{ color: \"blue\", fontWeight: \"bolder\" }}>\r\n                <input\r\n                  style={{ width: \"80px\", textAlign: \"center\" }}\r\n                  value={Revenue}\r\n                  onChange={(e) => {\r\n                    setRevenue(Math.round(+e.target.value * 100) / 100);\r\n                    setMarginPerUnit(\r\n                      ((+UnitsInOrder * +e.target.value -\r\n                        +UnitsInOrder *\r\n                          (+Manufacturing +\r\n                            +Inspection +\r\n                            +Packaging +\r\n                            +Freights +\r\n                            +Insert +\r\n                            +PPC +\r\n                            0.15 * +e.target.value +\r\n                            0.25 * +e.target.value)) /\r\n                        (+UnitsInOrder * +e.target.value)) *\r\n                        100\r\n                    );\r\n                    setTotalOutPerUnit(\r\n                      +Manufacturing +\r\n                        +Inspection +\r\n                        +Packaging +\r\n                        +Freights +\r\n                        +Insert +\r\n                        +PPC +\r\n                        0.15 * +e.target.value +\r\n                        0.25 * +e.target.value\r\n                    );\r\n                    setRefFee(0.15 * +e.target.value);\r\n                    setFBAFee(0.25 * +e.target.value);\r\n                    setTotalInPerOrder(+UnitsInOrder * +e.target.value);\r\n                    setTotalOutPerOrder(\r\n                      (+Manufacturing +\r\n                        +Inspection +\r\n                        +Packaging +\r\n                        +Freights +\r\n                        +Insert +\r\n                        +PPC +\r\n                        0.15 * +e.target.value +\r\n                        0.25 * +e.target.value) *\r\n                        +UnitsInOrder +\r\n                        OneOrderTimeSAAS\r\n                    );\r\n                    setTotalIn(+e.target.value * +UnitsInOrder * +Orders);\r\n                    setTotalOut(\r\n                      ((+Manufacturing +\r\n                        +Inspection +\r\n                        +Packaging +\r\n                        +Freights +\r\n                        +Insert +\r\n                        +PPC +\r\n                        0.15 * +e.target.value +\r\n                        0.25 * +e.target.value) *\r\n                        +UnitsInOrder +\r\n                        OneOrderTimeSAAS) *\r\n                        +Orders +\r\n                        +TotalOneTime\r\n                    );\r\n                    setTotalProfit(\r\n                      +e.target.value * +UnitsInOrder * +Orders -\r\n                        (((+Manufacturing +\r\n                          +Inspection +\r\n                          +Packaging +\r\n                          +Freights +\r\n                          +Insert +\r\n                          +PPC +\r\n                          0.15 * +e.target.value +\r\n                          0.25 * +e.target.value) *\r\n                          +UnitsInOrder +\r\n                          OneOrderTimeSAAS) *\r\n                          +Orders +\r\n                          +TotalOneTime)\r\n                    );\r\n                    setTotalMargin(\r\n                      ((+e.target.value * +UnitsInOrder * +Orders -\r\n                        (((+Manufacturing +\r\n                          +Inspection +\r\n                          +Packaging +\r\n                          +Freights +\r\n                          +Insert +\r\n                          +PPC +\r\n                          0.15 * +e.target.value +\r\n                          0.25 * +e.target.value) *\r\n                          +UnitsInOrder +\r\n                          OneOrderTimeSAAS) *\r\n                          +Orders +\r\n                          +TotalOneTime)) /\r\n                        (+e.target.value * +UnitsInOrder * +Orders)) *\r\n                        100\r\n                    );\r\n                  }}\r\n                  type=\"number\"\r\n                  min=\"0.00\"\r\n                  max=\"100000000.00\"\r\n                  step=\"0.01\"\r\n                />\r\n              </td>\r\n              <td\r\n                style={{ width: \"30px\", color: \"blue\", fontWeight: \"bolder\" }}\r\n              >\r\n                {\"$\"}\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td\r\n                style={{\r\n                  width: \"154px\",\r\n                  color: \"blue\",\r\n                  fontWeight: \"bolder\",\r\n                }}\r\n              >\r\n                RefFee:{\" \"}\r\n              </td>\r\n              <td style={{ color: \"blue\", fontWeight: \"bolder\" }}>\r\n                <input\r\n                  style={{ width: \"80px\", textAlign: \"center\" }}\r\n                  value={Math.round(RefFee * 100) / 100}\r\n                  type=\"number\"\r\n                  min=\"0.00\"\r\n                  max=\"100000000.00\"\r\n                  step=\"0.01\"\r\n                  disabled\r\n                />\r\n              </td>\r\n              <td\r\n                style={{ width: \"30px\", color: \"blue\", fontWeight: \"bolder\" }}\r\n              >\r\n                {\"$\"}\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td\r\n                style={{\r\n                  width: \"154px\",\r\n                  color: \"blue\",\r\n                  fontWeight: \"bolder\",\r\n                }}\r\n              >\r\n                FBAFee:{\" \"}\r\n              </td>\r\n              <td style={{ color: \"blue\", fontWeight: \"bolder\" }}>\r\n                <input\r\n                  style={{ width: \"80px\", textAlign: \"center\" }}\r\n                  value={Math.round(FBAFee * 100) / 100}\r\n                  type=\"number\"\r\n                  min=\"0.00\"\r\n                  max=\"100000000.00\"\r\n                  step=\"0.01\"\r\n                  disabled\r\n                />\r\n              </td>\r\n              <td\r\n                style={{ width: \"30px\", color: \"blue\", fontWeight: \"bolder\" }}\r\n              >\r\n                {\"$\"}\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td\r\n                style={{\r\n                  width: \"154px\",\r\n                  color: \"blue\",\r\n                  fontWeight: \"bolder\",\r\n                }}\r\n              >\r\n                TotalOutPerUnit:\r\n              </td>\r\n              <td style={{ color: \"blue\", fontWeight: \"bolder\" }}>\r\n                <input\r\n                  style={{ width: \"80px\", textAlign: \"center\" }}\r\n                  value={Math.round(TotalOutPerUnit * 100) / 100}\r\n                  type=\"number\"\r\n                  min=\"0.00\"\r\n                  max=\"100000000.00\"\r\n                  step=\"0.01\"\r\n                  disabled\r\n                />\r\n              </td>\r\n              <td\r\n                style={{ width: \"30px\", color: \"blue\", fontWeight: \"bolder\" }}\r\n              >\r\n                {\"$\"}\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td\r\n                style={{\r\n                  width: \"154px\",\r\n                  color: \"blue\",\r\n                  fontWeight: \"bolder\",\r\n                }}\r\n              >\r\n                OneOrderTimeSAAS:\r\n              </td>\r\n              <td style={{ color: \"blue\", fontWeight: \"bolder\" }}>\r\n                <input\r\n                  style={{ width: \"80px\", textAlign: \"center\" }}\r\n                  value={OneOrderTimeSAAS}\r\n                  onChange={(e) => {\r\n                    setOneOrderTimeSAAS(\r\n                      Math.round(+e.target.value * 100) / 100\r\n                    );\r\n                    setTotalSAAS(+Orders * +e.target.value);\r\n                    setTotalOutPerOrder(\r\n                      +e.target.value +\r\n                        +UnitsInOrder *\r\n                          (+Manufacturing +\r\n                            +Inspection +\r\n                            +Packaging +\r\n                            +Freights +\r\n                            +Insert +\r\n                            +PPC +\r\n                            +RefFee +\r\n                            +FBAFee)\r\n                    );\r\n                    setTotalOut(\r\n                      +Orders *\r\n                        (+e.target.value +\r\n                          +UnitsInOrder *\r\n                            (+Manufacturing +\r\n                              +Inspection +\r\n                              +Packaging +\r\n                              +Freights +\r\n                              +Insert +\r\n                              +PPC +\r\n                              +RefFee +\r\n                              +FBAFee))\r\n                    );\r\n                    setTotalProfit(\r\n                      TotalIn -\r\n                        +Orders *\r\n                          (+e.target.value +\r\n                            +UnitsInOrder *\r\n                              (+Manufacturing +\r\n                                +Inspection +\r\n                                +Packaging +\r\n                                +Freights +\r\n                                +Insert +\r\n                                +PPC +\r\n                                +RefFee +\r\n                                +FBAFee))\r\n                    );\r\n                    setTotalMargin(\r\n                      ((TotalIn -\r\n                        +Orders *\r\n                          (+e.target.value +\r\n                            +UnitsInOrder *\r\n                              (+Manufacturing +\r\n                                +Inspection +\r\n                                +Packaging +\r\n                                +Freights +\r\n                                +Insert +\r\n                                +PPC +\r\n                                +RefFee +\r\n                                +FBAFee))) /\r\n                        +TotalIn) *\r\n                        100\r\n                    );\r\n                  }}\r\n                  type=\"number\"\r\n                  min=\"0.00\"\r\n                  max=\"100000000.00\"\r\n                  step=\"0.01\"\r\n                />\r\n              </td>\r\n              <td\r\n                style={{ width: \"30px\", color: \"blue\", fontWeight: \"bolder\" }}\r\n              >\r\n                {\"$\"}\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td\r\n                style={{\r\n                  width: \"154px\",\r\n                  color: \"blue\",\r\n                  fontWeight: \"bolder\",\r\n                }}\r\n              >\r\n                TotalSAAS:\r\n              </td>\r\n              <td style={{ color: \"blue\", fontWeight: \"bolder\" }}>\r\n                <input\r\n                  style={{ width: \"80px\", textAlign: \"center\" }}\r\n                  value={Math.round(TotalSAAS * 100) / 100}\r\n                  type=\"number\"\r\n                  min=\"0.00\"\r\n                  max=\"100000000.00\"\r\n                  step=\"0.01\"\r\n                  disabled\r\n                />\r\n              </td>\r\n              <td\r\n                style={{ width: \"30px\", color: \"blue\", fontWeight: \"bolder\" }}\r\n              >\r\n                {\"$\"}\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td\r\n                style={{\r\n                  width: \"154px\",\r\n                  color: \"blue\",\r\n                  fontWeight: \"bolder\",\r\n                }}\r\n              >\r\n                LLC:\r\n              </td>\r\n              <td style={{ color: \"blue\", fontWeight: \"bolder\" }}>\r\n                <input\r\n                  style={{ width: \"80px\", textAlign: \"center\" }}\r\n                  value={LLC}\r\n                  onChange={(e) => {\r\n                    setLLC(Math.round(+e.target.value * 100) / 100);\r\n                    setTotalOneTime(\r\n                      +e.target.value +\r\n                        +Trademark +\r\n                        +Photographing +\r\n                        +Unboxing +\r\n                        +InsertDesign +\r\n                        +PackagingDesign +\r\n                        +Samples\r\n                    );\r\n                    setTotalOut(\r\n                      +TotalOutPerOrder * +Orders +\r\n                        (+e.target.value +\r\n                          +Trademark +\r\n                          +Photographing +\r\n                          +Unboxing +\r\n                          +InsertDesign +\r\n                          +PackagingDesign +\r\n                          +Samples)\r\n                    );\r\n                    setTotalProfit(\r\n                      TotalIn -\r\n                        (+TotalOutPerOrder * +Orders +\r\n                          (+e.target.value +\r\n                            +Trademark +\r\n                            +Photographing +\r\n                            +Unboxing +\r\n                            +InsertDesign +\r\n                            +PackagingDesign +\r\n                            +Samples))\r\n                    );\r\n                    setTotalMargin(\r\n                      ((TotalIn -\r\n                        (+TotalOutPerOrder * +Orders +\r\n                          (+e.target.value +\r\n                            +Trademark +\r\n                            +Photographing +\r\n                            +Unboxing +\r\n                            +InsertDesign +\r\n                            +PackagingDesign +\r\n                            +Samples))) /\r\n                        +TotalIn) *\r\n                        100\r\n                    );\r\n                  }}\r\n                  type=\"number\"\r\n                  min=\"0.00\"\r\n                  max=\"100000000.00\"\r\n                  step=\"0.01\"\r\n                />\r\n              </td>\r\n              <td\r\n                style={{ width: \"30px\", color: \"blue\", fontWeight: \"bolder\" }}\r\n              >\r\n                {\"$\"}\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td\r\n                style={{\r\n                  width: \"154px\",\r\n                  color: \"blue\",\r\n                  fontWeight: \"bolder\",\r\n                }}\r\n              >\r\n                Trademark:\r\n              </td>\r\n              <td style={{ color: \"blue\", fontWeight: \"bolder\" }}>\r\n                <input\r\n                  style={{ width: \"80px\", textAlign: \"center\" }}\r\n                  value={Trademark}\r\n                  onChange={(e) => {\r\n                    setTrademark(Math.round(+e.target.value * 100) / 100);\r\n                    setTotalOneTime(\r\n                      +LLC +\r\n                        +e.target.value +\r\n                        +Photographing +\r\n                        +Unboxing +\r\n                        +InsertDesign +\r\n                        +PackagingDesign +\r\n                        +Samples\r\n                    );\r\n                    setTotalOut(\r\n                      +TotalOutPerOrder * +Orders +\r\n                        (+LLC +\r\n                          +e.target.value +\r\n                          +Photographing +\r\n                          +Unboxing +\r\n                          +InsertDesign +\r\n                          +PackagingDesign +\r\n                          +Samples)\r\n                    );\r\n                    setTotalProfit(\r\n                      TotalIn -\r\n                        (+TotalOutPerOrder * +Orders +\r\n                          (+LLC +\r\n                            +e.target.value +\r\n                            +Photographing +\r\n                            +Unboxing +\r\n                            +InsertDesign +\r\n                            +PackagingDesign +\r\n                            +Samples))\r\n                    );\r\n                    setTotalMargin(\r\n                      ((TotalIn -\r\n                        (+TotalOutPerOrder * +Orders +\r\n                          (+LLC +\r\n                            +e.target.value +\r\n                            +Photographing +\r\n                            +Unboxing +\r\n                            +InsertDesign +\r\n                            +PackagingDesign +\r\n                            +Samples))) /\r\n                        +TotalIn) *\r\n                        100\r\n                    );\r\n                  }}\r\n                  type=\"number\"\r\n                  min=\"0.00\"\r\n                  max=\"100000000.00\"\r\n                  step=\"0.01\"\r\n                />\r\n              </td>\r\n              <td\r\n                style={{ width: \"30px\", color: \"blue\", fontWeight: \"bolder\" }}\r\n              >\r\n                {\"$\"}\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td\r\n                style={{\r\n                  width: \"154px\",\r\n                  color: \"blue\",\r\n                  fontWeight: \"bolder\",\r\n                }}\r\n              >\r\n                Photographing:\r\n              </td>\r\n              <td style={{ color: \"blue\", fontWeight: \"bolder\" }}>\r\n                <input\r\n                  style={{ width: \"80px\", textAlign: \"center\" }}\r\n                  value={Photographing}\r\n                  onChange={(e) => {\r\n                    setPhotographing(Math.round(+e.target.value * 100) / 100);\r\n                    setTotalOneTime(\r\n                      +LLC +\r\n                        +Trademark +\r\n                        +e.target.value +\r\n                        +Unboxing +\r\n                        +InsertDesign +\r\n                        +PackagingDesign +\r\n                        +Samples\r\n                    );\r\n                    setTotalOut(\r\n                      +TotalOutPerOrder * +Orders +\r\n                        (+LLC +\r\n                          +Trademark +\r\n                          +e.target.value +\r\n                          +Unboxing +\r\n                          +InsertDesign +\r\n                          +PackagingDesign +\r\n                          +Samples)\r\n                    );\r\n                    setTotalProfit(\r\n                      TotalIn -\r\n                        (+TotalOutPerOrder * +Orders +\r\n                          (+LLC +\r\n                            +Trademark +\r\n                            +e.target.value +\r\n                            +Unboxing +\r\n                            +InsertDesign +\r\n                            +PackagingDesign +\r\n                            +Samples))\r\n                    );\r\n                    setTotalMargin(\r\n                      ((TotalIn -\r\n                        (+TotalOutPerOrder * +Orders +\r\n                          (+LLC +\r\n                            +Trademark +\r\n                            +e.target.value +\r\n                            +Unboxing +\r\n                            +InsertDesign +\r\n                            +PackagingDesign +\r\n                            +Samples))) /\r\n                        +TotalIn) *\r\n                        100\r\n                    );\r\n                  }}\r\n                  type=\"number\"\r\n                  min=\"0.00\"\r\n                  max=\"100000000.00\"\r\n                  step=\"0.01\"\r\n                />\r\n              </td>\r\n              <td\r\n                style={{ width: \"30px\", color: \"blue\", fontWeight: \"bolder\" }}\r\n              >\r\n                {\"$\"}\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td\r\n                style={{\r\n                  width: \"154px\",\r\n                  color: \"blue\",\r\n                  fontWeight: \"bolder\",\r\n                }}\r\n              >\r\n                Unboxing:\r\n              </td>\r\n              <td style={{ color: \"blue\", fontWeight: \"bolder\" }}>\r\n                <input\r\n                  style={{ width: \"80px\", textAlign: \"center\" }}\r\n                  value={Unboxing}\r\n                  onChange={(e) => {\r\n                    setUnboxing(Math.round(+e.target.value * 100) / 100);\r\n                    setTotalOneTime(\r\n                      +LLC +\r\n                        +Trademark +\r\n                        +Photographing +\r\n                        +e.target.value +\r\n                        +InsertDesign +\r\n                        +PackagingDesign +\r\n                        +Samples\r\n                    );\r\n                    setTotalOut(\r\n                      +TotalOutPerOrder * +Orders +\r\n                        (+LLC +\r\n                          +Trademark +\r\n                          +Photographing +\r\n                          +e.target.value +\r\n                          +InsertDesign +\r\n                          +PackagingDesign +\r\n                          +Samples)\r\n                    );\r\n                    setTotalProfit(\r\n                      TotalIn -\r\n                        (+TotalOutPerOrder * +Orders +\r\n                          (+LLC +\r\n                            +Trademark +\r\n                            +Photographing +\r\n                            +e.target.value +\r\n                            +InsertDesign +\r\n                            +PackagingDesign +\r\n                            +Samples))\r\n                    );\r\n                    setTotalMargin(\r\n                      ((TotalIn -\r\n                        (+TotalOutPerOrder * +Orders +\r\n                          (+LLC +\r\n                            +Trademark +\r\n                            +Photographing +\r\n                            +e.target.value +\r\n                            +InsertDesign +\r\n                            +PackagingDesign +\r\n                            +Samples))) /\r\n                        +TotalIn) *\r\n                        100\r\n                    );\r\n                  }}\r\n                  type=\"number\"\r\n                  min=\"0.00\"\r\n                  max=\"100000000.00\"\r\n                  step=\"0.01\"\r\n                />\r\n              </td>\r\n              <td\r\n                style={{ width: \"30px\", color: \"blue\", fontWeight: \"bolder\" }}\r\n              >\r\n                {\"$\"}\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td\r\n                style={{\r\n                  width: \"154px\",\r\n                  color: \"blue\",\r\n                  fontWeight: \"bolder\",\r\n                }}\r\n              >\r\n                InsertDesign:\r\n              </td>\r\n              <td style={{ color: \"blue\", fontWeight: \"bolder\" }}>\r\n                <input\r\n                  style={{ width: \"80px\", textAlign: \"center\" }}\r\n                  value={InsertDesign}\r\n                  onChange={(e) => {\r\n                    setInsertDesign(Math.round(+e.target.value * 100) / 100);\r\n                    setTotalOneTime(\r\n                      +LLC +\r\n                        +Trademark +\r\n                        +Photographing +\r\n                        +Unboxing +\r\n                        +e.target.value +\r\n                        +PackagingDesign +\r\n                        +Samples\r\n                    );\r\n                    setTotalOut(\r\n                      +TotalOutPerOrder * +Orders +\r\n                        (+LLC +\r\n                          +Trademark +\r\n                          +Photographing +\r\n                          +Unboxing +\r\n                          +e.target.value +\r\n                          +PackagingDesign +\r\n                          +Samples)\r\n                    );\r\n                    setTotalProfit(\r\n                      TotalIn -\r\n                        (+TotalOutPerOrder * +Orders +\r\n                          (+LLC +\r\n                            +Trademark +\r\n                            +Photographing +\r\n                            +Unboxing +\r\n                            +e.target.value +\r\n                            +PackagingDesign +\r\n                            +Samples))\r\n                    );\r\n                    setTotalMargin(\r\n                      ((TotalIn -\r\n                        (+TotalOutPerOrder * +Orders +\r\n                          (+LLC +\r\n                            +Trademark +\r\n                            +Photographing +\r\n                            +Unboxing +\r\n                            +e.target.value +\r\n                            +PackagingDesign +\r\n                            +Samples))) /\r\n                        +TotalIn) *\r\n                        100\r\n                    );\r\n                  }}\r\n                  type=\"number\"\r\n                  min=\"0.00\"\r\n                  max=\"100000000.00\"\r\n                  step=\"0.01\"\r\n                />\r\n              </td>\r\n              <td\r\n                style={{ width: \"30px\", color: \"blue\", fontWeight: \"bolder\" }}\r\n              >\r\n                {\"$\"}\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td\r\n                style={{\r\n                  width: \"154px\",\r\n                  color: \"blue\",\r\n                  fontWeight: \"bolder\",\r\n                }}\r\n              >\r\n                PackagingDesign:\r\n              </td>\r\n              <td style={{ color: \"blue\", fontWeight: \"bolder\" }}>\r\n                <input\r\n                  style={{ width: \"80px\", textAlign: \"center\" }}\r\n                  value={PackagingDesign}\r\n                  onChange={(e) => {\r\n                    setPackagingDesign(Math.round(+e.target.value * 100) / 100);\r\n                    setTotalOneTime(\r\n                      +LLC +\r\n                        +Trademark +\r\n                        +Photographing +\r\n                        +Unboxing +\r\n                        +InsertDesign +\r\n                        +e.target.value +\r\n                        +Samples\r\n                    );\r\n                    setTotalOut(\r\n                      +TotalOutPerOrder * +Orders +\r\n                        (+LLC +\r\n                          +Trademark +\r\n                          +Photographing +\r\n                          +Unboxing +\r\n                          +InsertDesign +\r\n                          +e.target.value +\r\n                          +Samples)\r\n                    );\r\n                    setTotalProfit(\r\n                      TotalIn -\r\n                        (+TotalOutPerOrder * +Orders +\r\n                          (+LLC +\r\n                            +Trademark +\r\n                            +Photographing +\r\n                            +Unboxing +\r\n                            +InsertDesign +\r\n                            +e.target.value +\r\n                            +Samples))\r\n                    );\r\n                    setTotalMargin(\r\n                      ((TotalIn -\r\n                        (+TotalOutPerOrder * +Orders +\r\n                          (+LLC +\r\n                            +Trademark +\r\n                            +Photographing +\r\n                            +Unboxing +\r\n                            +InsertDesign +\r\n                            +e.target.value +\r\n                            +Samples))) /\r\n                        +TotalIn) *\r\n                        100\r\n                    );\r\n                  }}\r\n                  type=\"number\"\r\n                  min=\"0.00\"\r\n                  max=\"100000000.00\"\r\n                  step=\"0.01\"\r\n                />\r\n              </td>\r\n              <td\r\n                style={{ width: \"30px\", color: \"blue\", fontWeight: \"bolder\" }}\r\n              >\r\n                {\"$\"}\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td\r\n                style={{\r\n                  width: \"154px\",\r\n                  color: \"blue\",\r\n                  fontWeight: \"bolder\",\r\n                }}\r\n              >\r\n                Samples:\r\n              </td>\r\n              <td style={{ color: \"blue\", fontWeight: \"bolder\" }}>\r\n                <input\r\n                  style={{ width: \"80px\", textAlign: \"center\" }}\r\n                  value={Samples}\r\n                  onChange={(e) => {\r\n                    setSamples(Math.round(+e.target.value * 100) / 100);\r\n                    setTotalOneTime(\r\n                      +LLC +\r\n                        +Trademark +\r\n                        +Photographing +\r\n                        +Unboxing +\r\n                        +InsertDesign +\r\n                        +PackagingDesign +\r\n                        +e.target.value\r\n                    );\r\n                    setTotalOut(\r\n                      +TotalOutPerOrder * +Orders +\r\n                        (+LLC +\r\n                          +Trademark +\r\n                          +Photographing +\r\n                          +Unboxing +\r\n                          +InsertDesign +\r\n                          +PackagingDesign +\r\n                          +e.target.value)\r\n                    );\r\n                    setTotalProfit(\r\n                      TotalIn -\r\n                        (+TotalOutPerOrder * +Orders +\r\n                          (+LLC +\r\n                            +Trademark +\r\n                            +Photographing +\r\n                            +Unboxing +\r\n                            +InsertDesign +\r\n                            +PackagingDesign +\r\n                            +e.target.value))\r\n                    );\r\n                    setTotalMargin(\r\n                      ((TotalIn -\r\n                        (+TotalOutPerOrder * +Orders +\r\n                          (+LLC +\r\n                            +Trademark +\r\n                            +Photographing +\r\n                            +Unboxing +\r\n                            +InsertDesign +\r\n                            +PackagingDesign +\r\n                            +e.target.value))) /\r\n                        +TotalIn) *\r\n                        100\r\n                    );\r\n                  }}\r\n                  type=\"number\"\r\n                  min=\"0.00\"\r\n                  max=\"100000000.00\"\r\n                  step=\"0.01\"\r\n                />\r\n              </td>\r\n              <td\r\n                style={{ width: \"30px\", color: \"blue\", fontWeight: \"bolder\" }}\r\n              >\r\n                {\"$\"}\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td\r\n                style={{\r\n                  width: \"154px\",\r\n                  color: \"blue\",\r\n                  fontWeight: \"bolder\",\r\n                }}\r\n              >\r\n                TotalOneTime:\r\n              </td>\r\n              <td style={{ color: \"blue\", fontWeight: \"bolder\" }}>\r\n                <input\r\n                  style={{ width: \"80px\", textAlign: \"center\" }}\r\n                  value={Math.round(TotalOneTime * 100) / 100}\r\n                  type=\"number\"\r\n                  min=\"0.00\"\r\n                  max=\"100000000.00\"\r\n                  step=\"0.01\"\r\n                  disabled\r\n                />\r\n              </td>\r\n              <td\r\n                style={{ width: \"30px\", color: \"blue\", fontWeight: \"bolder\" }}\r\n              >\r\n                {\"$\"}\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td\r\n                style={{\r\n                  width: \"154px\",\r\n                  color: \"blue\",\r\n                  fontWeight: \"bolder\",\r\n                }}\r\n              >\r\n                UnitsInOrder:\r\n              </td>\r\n              <td style={{ color: \"blue\", fontWeight: \"bolder\" }}>\r\n                <input\r\n                  style={{ width: \"80px\", textAlign: \"center\" }}\r\n                  value={UnitsInOrder}\r\n                  onChange={(e) => {\r\n                    setUnitsInOrder(Math.round(+e.target.value * 100) / 100);\r\n                    setMarginPerUnit(\r\n                      ((+e.target.value * +Revenue -\r\n                        +e.target.value * +TotalOutPerUnit) /\r\n                        (+e.target.value * +Revenue)) *\r\n                        100\r\n                    );\r\n                    setTotalOutPerOrder(\r\n                      +OneOrderTimeSAAS + +e.target.value * +TotalOutPerUnit\r\n                    );\r\n                    setTotalInPerOrder(+e.target.value * +Revenue);\r\n                    setTotalIn(+e.target.value * +Revenue * +Orders);\r\n                    setTotalOut(\r\n                      (+OneOrderTimeSAAS + +e.target.value * +TotalOutPerUnit) *\r\n                        +Orders\r\n                    );\r\n                    setTotalProfit(\r\n                      +TotalIn -\r\n                        (+OneOrderTimeSAAS +\r\n                          +e.target.value * +TotalOutPerUnit) *\r\n                          +Orders\r\n                    );\r\n                    setTotalMargin(\r\n                      ((+TotalIn -\r\n                        (+OneOrderTimeSAAS +\r\n                          +e.target.value * +TotalOutPerUnit) *\r\n                          +Orders) /\r\n                        +TotalIn) *\r\n                        100\r\n                    );\r\n                  }}\r\n                  type=\"number\"\r\n                  min=\"0.00\"\r\n                  max=\"100000000.00\"\r\n                  step=\"0.01\"\r\n                />\r\n              </td>\r\n              <td\r\n                style={{ width: \"30px\", color: \"blue\", fontWeight: \"bolder\" }}\r\n              >\r\n                {\" \"}\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td\r\n                style={{\r\n                  width: \"154px\",\r\n                  color: \"blue\",\r\n                  fontWeight: \"bolder\",\r\n                }}\r\n              >\r\n                TotalOutPerOrder:\r\n              </td>\r\n              <td style={{ color: \"blue\", fontWeight: \"bolder\" }}>\r\n                <input\r\n                  style={{ width: \"80px\", textAlign: \"center\" }}\r\n                  value={Math.round(TotalOutPerOrder * 100) / 100}\r\n                  type=\"number\"\r\n                  min=\"0.00\"\r\n                  max=\"100000000.00\"\r\n                  step=\"0.01\"\r\n                  disabled\r\n                />\r\n              </td>\r\n              <td\r\n                style={{ width: \"30px\", color: \"blue\", fontWeight: \"bolder\" }}\r\n              >\r\n                {\"$\"}\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td\r\n                style={{\r\n                  width: \"154px\",\r\n                  color: \"blue\",\r\n                  fontWeight: \"bolder\",\r\n                }}\r\n              >\r\n                TotalInPerOrder:\r\n              </td>\r\n              <td style={{ color: \"blue\", fontWeight: \"bolder\" }}>\r\n                <input\r\n                  style={{ width: \"80px\", textAlign: \"center\" }}\r\n                  value={Math.round(TotalInPerOrder * 100) / 100}\r\n                  type=\"number\"\r\n                  min=\"0.00\"\r\n                  max=\"100000000.00\"\r\n                  step=\"0.01\"\r\n                  disabled\r\n                />\r\n              </td>\r\n              <td\r\n                style={{ width: \"30px\", color: \"blue\", fontWeight: \"bolder\" }}\r\n              >\r\n                {\"$\"}\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td\r\n                style={{\r\n                  width: \"154px\",\r\n                  color: \"blue\",\r\n                  fontWeight: \"bolder\",\r\n                }}\r\n              >\r\n                MarginPerUnit:\r\n              </td>\r\n              <td style={{ color: \"blue\", fontWeight: \"bolder\" }}>\r\n                <input\r\n                  style={{ width: \"80px\", textAlign: \"center\" }}\r\n                  value={Math.round(MarginPerUnit * 100) / 100}\r\n                  type=\"number\"\r\n                  min=\"0.00\"\r\n                  max=\"100000000.00\"\r\n                  step=\"0.01\"\r\n                  disabled\r\n                />\r\n              </td>\r\n              <td\r\n                style={{ width: \"30px\", color: \"blue\", fontWeight: \"bolder\" }}\r\n              >\r\n                {\"%\"}\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td\r\n                style={{\r\n                  width: \"154px\",\r\n                  color: \"blue\",\r\n                  fontWeight: \"bolder\",\r\n                }}\r\n              >\r\n                Orders:\r\n              </td>\r\n              <td style={{ color: \"blue\", fontWeight: \"bolder\" }}>\r\n                <input\r\n                  style={{ width: \"80px\", textAlign: \"center\" }}\r\n                  value={Orders}\r\n                  onChange={(e) => {\r\n                    setOrders(Math.round(+e.target.value * 100) / 100);\r\n                    setTotalSAAS(+e.target.value * OneOrderTimeSAAS);\r\n                    setTotalIn(+TotalInPerOrder * +e.target.value);\r\n                    setTotalOut(\r\n                      +TotalOutPerOrder * +e.target.value +\r\n                        +TotalOneTime +\r\n                        +e.target.value * OneOrderTimeSAAS\r\n                    );\r\n                    setTotalProfit(\r\n                      +TotalInPerOrder * +e.target.value -\r\n                        (+TotalOutPerOrder * +e.target.value + +TotalOneTime)\r\n                    );\r\n                    setTotalMargin(\r\n                      ((+TotalInPerOrder * +e.target.value -\r\n                        (+TotalOutPerOrder * +e.target.value + +TotalOneTime)) /\r\n                        (+TotalInPerOrder * +e.target.value)) *\r\n                        100\r\n                    );\r\n                  }}\r\n                  type=\"number\"\r\n                  min=\"0.00\"\r\n                  max=\"100000000.00\"\r\n                  step=\"0.01\"\r\n                />\r\n              </td>\r\n              <td\r\n                style={{ width: \"30px\", color: \"blue\", fontWeight: \"bolder\" }}\r\n              >\r\n                {\" \"}\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td\r\n                style={{\r\n                  width: \"154px\",\r\n                  color: \"blue\",\r\n                  fontWeight: \"bolder\",\r\n                }}\r\n              >\r\n                TotalIn:\r\n              </td>\r\n              <td style={{ color: \"blue\", fontWeight: \"bolder\" }}>\r\n                <input\r\n                  style={{ width: \"80px\", textAlign: \"center\" }}\r\n                  value={Math.round(TotalIn * 100) / 100}\r\n                  type=\"number\"\r\n                  min=\"0.00\"\r\n                  max=\"100000000.00\"\r\n                  step=\"0.01\"\r\n                  disabled\r\n                />\r\n              </td>\r\n              <td\r\n                style={{ width: \"30px\", color: \"blue\", fontWeight: \"bolder\" }}\r\n              >\r\n                {\"$\"}\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td\r\n                style={{\r\n                  width: \"154px\",\r\n                  color: \"blue\",\r\n                  fontWeight: \"bolder\",\r\n                }}\r\n              >\r\n                TotalOut:\r\n              </td>\r\n              <td style={{ color: \"blue\", fontWeight: \"bolder\" }}>\r\n                <input\r\n                  style={{ width: \"80px\", textAlign: \"center\" }}\r\n                  value={Math.round(TotalOut * 100) / 100}\r\n                  type=\"number\"\r\n                  min=\"0.00\"\r\n                  max=\"100000000.00\"\r\n                  step=\"0.01\"\r\n                  disabled\r\n                />\r\n              </td>\r\n              <td\r\n                style={{ width: \"30px\", color: \"blue\", fontWeight: \"bolder\" }}\r\n              >\r\n                {\"$\"}\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td\r\n                style={{\r\n                  width: \"154px\",\r\n                  color: \"blue\",\r\n                  fontWeight: \"bolder\",\r\n                }}\r\n              >\r\n                TotalProfit:\r\n              </td>\r\n              <td style={{ color: \"blue\", fontWeight: \"bolder\" }}>\r\n                <input\r\n                  style={{ width: \"80px\", textAlign: \"center\" }}\r\n                  value={Math.round(TotalProfit * 100) / 100}\r\n                  type=\"number\"\r\n                  min=\"0.00\"\r\n                  max=\"100000000.00\"\r\n                  step=\"0.01\"\r\n                  disabled\r\n                />\r\n              </td>\r\n              <td\r\n                style={{ width: \"30px\", color: \"blue\", fontWeight: \"bolder\" }}\r\n              >\r\n                {\"$\"}\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td\r\n                style={{\r\n                  width: \"154px\",\r\n                  color: \"blue\",\r\n                  fontWeight: \"bolder\",\r\n                }}\r\n              >\r\n                TotalMargin:\r\n              </td>\r\n              <td style={{ color: \"blue\", fontWeight: \"bolder\" }}>\r\n                <input\r\n                  style={{ width: \"80px\", textAlign: \"center\" }}\r\n                  value={Math.round(TotalMargin * 100) / 100}\r\n                  type=\"number\"\r\n                  min=\"0.00\"\r\n                  max=\"100000000.00\"\r\n                  step=\"0.01\"\r\n                  disabled\r\n                />\r\n              </td>\r\n              <td\r\n                style={{ width: \"30px\", color: \"blue\", fontWeight: \"bolder\" }}\r\n              >\r\n                {\"%\"}\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <div style={{ textAlign: \"center\" }}>\r\n          <h1>:שולי רווח</h1>\r\n        </div>\r\n        <div>\r\n          <Chart data={data} />\r\n        </div>\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <div style={{ textAlign: \"center\" }}>\r\n          <h1>:רווח</h1>\r\n        </div>\r\n        <div>\r\n          <ChartP data={datap} />\r\n        </div>\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <h1>:מכנסיים התחלתיים לא כולל חד פעמיים</h1>\r\n      </div>\r\n      <div>\r\n        <h1>{Math.round(Listing * UnitsInOrder * 100) / 100 + \"$\"}</h1>\r\n      </div>\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}